<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>micchyboy</title>
    <description>ソフトウェアエンジニアリング・デザイン・日常について投稿するブログ。開発系はSwift, iOSが中心。仮想通貨、お出かけ、ガジェットなども。</description>
    <link>https://micchyboy1023.github.iohttps://micchyboy1023.github.io/</link>
    <atom:link href="https://micchyboy1023.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 01 Jun 2018 23:07:16 +0900</pubDate>
    <lastBuildDate>Fri, 01 Jun 2018 23:07:16 +0900</lastBuildDate>
    <generator>Jekyll v3.8.1</generator>
    
      <item>
        <title>rippled バージョン1.0.0がリリースされました</title>
        <description>&lt;p&gt;rippleの公式ブログで、rippled バージョン1.0.0のリリース記事が公開されました。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;rippledのバージョン1.0.0がリリース&lt;a href=&quot;https://twitter.com/hashtag/xrp?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#xrp&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/ripple?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#ripple&lt;/a&gt; &lt;a href=&quot;https://t.co/AmPvP7wQO6&quot;&gt;https://t.co/AmPvP7wQO6&lt;/a&gt;&lt;/p&gt;&amp;mdash; Masamichi Ueta (@micchyboy1023) &lt;a href=&quot;https://twitter.com/micchyboy1023/status/1002530922460110848?ref_src=twsrc%5Etfw&quot;&gt;2018年6月1日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rippled&lt;/code&gt;のサーバーを運用している場合、2018年6月14日（木）までにバージョン1.0.0にアップグレードする必要があるようです。&lt;/p&gt;

&lt;p&gt;アップデートの方法はこちら&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.ripple.com/update-rippled.html&quot;&gt;Update rippled&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;rippledとは&quot;&gt;rippledとは&lt;/h1&gt;

&lt;p&gt;そもそも&lt;code class=&quot;highlighter-rouge&quot;&gt;rippled&lt;/code&gt;とは何かですが、ウィキペディアによると&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;rippled（リップルド）はP2Pリップルネットワークで動作するサーバーの中核モジュールである。[1]
それぞれのrippledサーバーはリップルネットワークに接続し、暗号通貨取引のリレー動作、ローカルにコピーした分散元帳のメンテナンスなどを実行する。rippledのソースコードはC++で記述されており、オープンソースライセンス[2]としてGitHubに登録されている。
ユーザー自身のrippledサーバーを実行させることができる。それぞれのrippledサーバーは、分散元帳のコンセンサスプロセス[3]に参加したり、取引の検証を実行することができる。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;とのことです。&lt;/p&gt;

&lt;p&gt;つまり、&lt;code class=&quot;highlighter-rouge&quot;&gt;rippled&lt;/code&gt;を起動することで、リップルネットワークに参加できるということですね。&lt;/p&gt;

</description>
        <pubDate>Fri, 01 Jun 2018 01:00:00 +0900</pubDate>
        <link>https://micchyboy1023.github.io/cryptocurrency/2018/06/01/rippled1.html</link>
        <guid isPermaLink="true">https://micchyboy1023.github.io/cryptocurrency/2018/06/01/rippled1.html</guid>
        
        <category>リップル</category>
        
        <category>Ripple</category>
        
        <category>XRP</category>
        
        <category>仮想通貨</category>
        
        <category>cryptocurrency</category>
        
        
        <category>cryptocurrency</category>
        
      </item>
    
      <item>
        <title>Swift for TensorFlowをインストールして試してみる</title>
        <description>&lt;p&gt;先日TensorFlow Dev Summit2018で&lt;code class=&quot;highlighter-rouge&quot;&gt;Swift for TensorFlow&lt;/code&gt;が発表されました。&lt;/p&gt;

&lt;iframe src=&quot;https://www.youtube.com/embed/Yze693W4MaU&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;同時にTensorFlowのWebサイトに&lt;code class=&quot;highlighter-rouge&quot;&gt;Swift for TensorFlow&lt;/code&gt;のページができています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tensorflow.org/community/swift&quot;&gt;Swift for TensorFlow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;私はTensorFlowについては初心者なのですが、今回は&lt;code class=&quot;highlighter-rouge&quot;&gt;Swift for TensorFlow&lt;/code&gt;をインストールして試してみました！&lt;/p&gt;

&lt;p&gt;基本的にはGitHubのREADMEを見ながら実行していきます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tensorflow/swift/blob/master/Installation.md&quot;&gt;Install Swift for TensorFlow&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;インストール&quot;&gt;インストール&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;プレビルドパッケージをダウンロードする&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;私はmacを使っているので、GitHubのページから&lt;code class=&quot;highlighter-rouge&quot;&gt;Xcode&lt;/code&gt;と書かれているものをダウンロードします。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://storage.googleapis.com/swift-tensorflow/mac/swift-tensorflow-DEVELOPMENT-2018-05-10-a-osx.pkg&quot;&gt;Xcode&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://micchyboy1023.github.io/assets/posts/2018-06-01/download.png&quot; alt=&quot;Download Swift for TensorFlow&quot; title=&quot;Download Swift for TensorFlow&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;ダウンロードしたパッケージを実行する
実行すると、&lt;code class=&quot;highlighter-rouge&quot;&gt;/Library/Developer/Toolchains/&lt;/code&gt;にXcode toolchainが追加されます。Xcode toolchain（&lt;code class=&quot;highlighter-rouge&quot;&gt;.xctoolchain&lt;/code&gt;）には、コンパイラーやその他の開発ツールが含まれています。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Xcodeを開いて、&lt;code class=&quot;highlighter-rouge&quot;&gt;環境設定&lt;/code&gt;から&lt;code class=&quot;highlighter-rouge&quot;&gt;Compnents &amp;gt; Toolchains&lt;/code&gt;にいき、インストールされた`Swift for TensorFlow toolchainを選択します。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://micchyboy1023.github.io/assets/posts/2018-06-01/toolchain.png&quot; alt=&quot;Xcode toolchain&quot; title=&quot;Xcode toolchain&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;toolchainの選択はXcodeのみに適用されるので、コマンドラインを仕様する場合は、Swift toolchainをパスに追記する必要があります。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;export PATH=/Library/Developer/Toolchains/swift-latest/usr/bin:&quot;${PATH}&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;これでインストールは完了です。&lt;/p&gt;

&lt;h1 id=&quot;swift-for-tensorflowを使ってみる&quot;&gt;Swift for TensorFlowを使ってみる&lt;/h1&gt;

&lt;p&gt;とりあえず使ってみるという部分はこちらに記載されています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tensorflow/swift/blob/master/Usage.md&quot;&gt;Using Swift for TensorFlow&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;replread-eval-print-loop&quot;&gt;REPL(Read Eval Print Loop)&lt;/h2&gt;

&lt;p&gt;ターミナルを開いて、swiftを起動します。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ swift&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;TensorFlowを実行してみます。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1&amp;gt; import TensorFlow
2&amp;gt; var x = Tensor&amp;lt;Float&amp;gt;([[1, 2], [3, 4]])
x: TensorFlow.Tensor&amp;lt;Float&amp;gt; = [[1.0, 2.0], [3.0, 4.0]]
3&amp;gt; x + x
$R0: TensorFlow.Tensor&amp;lt;Float&amp;gt; = [[2.0, 4.0], [6.0, 8.0]]
4&amp;gt; for _ in 0..&amp;lt;3 {
5.     x += x
6. }
7&amp;gt; x
$R1: TensorFlow.Tensor&amp;lt;Float&amp;gt; = [[8.0, 16.0], [24.0, 32.0]]
8&amp;gt; x[0] + x[1]
$R2: TensorFlow.Tensor&amp;lt;Float&amp;gt; = [32.0, 48.0]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;インタプリタ&quot;&gt;インタプリタ&lt;/h2&gt;

&lt;p&gt;スクリプト言語のようにインタプリタでSwiftを実行することができます。
&lt;code class=&quot;highlighter-rouge&quot;&gt;inference.swift&lt;/code&gt;というファイルを作成して、以下のコードを書きます。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;kd&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TensorFlow&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MLPClassifier&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;w1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Tensor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;repeating&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;w2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Tensor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;scalars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;b1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Tensor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;b2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Tensor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;prediction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Tensor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Tensor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// The ⊗ operator performs matrix multiplication.&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;o1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tanh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;⊗&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;tanh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o1&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;⊗&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Tensor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;classifier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MLPClassifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;prediction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;prediction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prediction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;保存したら、swiftで実行します。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ swift -O inference.swift
[[0.680704]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-O&lt;/code&gt;をつけることではSwiftで最適化された状態で実行されます。&lt;/p&gt;

&lt;h2 id=&quot;xcode&quot;&gt;Xcode&lt;/h2&gt;

&lt;p&gt;Xcodeで実行するには、上記インストール手順で、Xcodeのツールチェーンをインストールしたものに変更しておきます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://micchyboy1023.github.io/assets/posts/2018-06-01/toolchain.png&quot; alt=&quot;Xcode toolchain&quot; title=&quot;Xcode toolchain&quot; /&gt;&lt;/p&gt;

&lt;p&gt;新しいPlaygroundファイルを作成して、以下のコードを記述します。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;kd&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;TensorFlow&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Tensor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;するとPlaygroundが実行されて、結果が表示されます。&lt;/p&gt;

&lt;p&gt;以上で&lt;code class=&quot;highlighter-rouge&quot;&gt;Swift for TensorFlow&lt;/code&gt;でTensorFlowを使用することができました。&lt;/p&gt;

&lt;p&gt;次回は何かしらのモデルを学習させたり予測させたりしたいと思います。&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Jun 2018 00:00:00 +0900</pubDate>
        <link>https://micchyboy1023.github.io/development/2018/06/01/swift-for-tensorflow-installation.html</link>
        <guid isPermaLink="true">https://micchyboy1023.github.io/development/2018/06/01/swift-for-tensorflow-installation.html</guid>
        
        <category>Swift</category>
        
        <category>Xcode</category>
        
        <category>TensorFlow</category>
        
        <category>Machine Lerning</category>
        
        <category>機械学習</category>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>手で持たないドローン日傘　free Parasolアサヒパワーサービスが開発</title>
        <description>&lt;p&gt;ニュースを見ていて面白いと思ったガジェットがありました。&lt;/p&gt;

&lt;p&gt;アサヒパワーサービスが手で持たないドローン日傘を開発したようです。&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/oICMTi1gd4A&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;説明によると&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ドローンにシートを装着したドローン傘で日差しを遮る&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;特定のマークを追尾する自動操縦仕様&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;価格は3万円程度を予定、2019年にも商用化する&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;とのことです。&lt;/p&gt;

&lt;p&gt;ついに自動で追従してくれる傘を使える日がくると思うと楽しみですね！&lt;/p&gt;
</description>
        <pubDate>Thu, 31 May 2018 00:00:00 +0900</pubDate>
        <link>https://micchyboy1023.github.io/gadget/2018/05/31/asahipowerservice-drone-umbrella.html</link>
        <guid isPermaLink="true">https://micchyboy1023.github.io/gadget/2018/05/31/asahipowerservice-drone-umbrella.html</guid>
        
        <category>ドローン</category>
        
        <category>傘</category>
        
        <category>アサヒパワーサービス</category>
        
        
        <category>gadget</category>
        
      </item>
    
      <item>
        <title>JekyllでSEO対策をする方法</title>
        <description>&lt;h1 id=&quot;jekyllでseo対策をする&quot;&gt;JekyllでSEO対策をする&lt;/h1&gt;

&lt;p&gt;グーグルやヤフーの検索でブログをヒットさせるには、SEOを行う必要がります。
今回はJekyllのSEO対策について書きます。&lt;/p&gt;

&lt;p&gt;よくブログで使われるワードプレスは最初からSEOに最適化された状態ですが、JekyllでもSEO対策を行うことが出来ます。&lt;/p&gt;

&lt;h2 id=&quot;グーグルの検索で上位に表示されるには&quot;&gt;グーグルの検索で上位に表示されるには&lt;/h2&gt;

&lt;p&gt;様々な検索エンジンがありますが、グーグルが寡占状態です。つまり、ブログのページがグーグルの検索インデックスに登録され、グーグル検索で上位に表示されるようにする必要があります。&lt;/p&gt;

&lt;p&gt;JekyllにはSEOを簡単にしてくれるいくつかのプラグインがあります。プラグインとその他のSEO対策についてまとめました。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll-seo-tag&lt;/code&gt;プラグイン&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll-sitemap&lt;/code&gt;プラグイン&lt;/li&gt;
  &lt;li&gt;画像のオルトタグ&lt;/li&gt;
  &lt;li&gt;レスポンシブ&lt;/li&gt;
  &lt;li&gt;スピード&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;1-jekyll-seo-tagプラグイン&quot;&gt;1. &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll-seo-tag&lt;/code&gt;プラグイン&lt;/h2&gt;

&lt;p&gt;Jekyllには、SEO用の設定を作ってくれる&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll-seo-tag&lt;/code&gt;というプラグインがあります。&lt;/p&gt;

&lt;p&gt;こちらの記事に詳しく書いてあります。
&lt;a href=&quot;https://help.github.com/articles/search-engine-optimization-for-github-pages/&quot;&gt;Search engine optimization for GitHub Pages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;使い方としては、&lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;に&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll-seo-tag&lt;/code&gt;を追加します。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;plugins:
  - jekyll-seo-tag
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;そして、&lt;code class=&quot;highlighter-rouge&quot;&gt;head&lt;/code&gt;タグを記入しているところに、&lt;code class=&quot;highlighter-rouge&quot;&gt;seo&lt;/code&gt;プラグインを記述します。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    
    {% include head.html %}
    {% seo %}
    
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;これで、タイトルや見出しなど、headタグで必要なSEO対策が行われます。&lt;/p&gt;

&lt;h2 id=&quot;2-jekyll-sitemapプラグイン&quot;&gt;2. &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll-sitemap&lt;/code&gt;プラグイン&lt;/h2&gt;

&lt;p&gt;グーグルにブログのページがインデックス登録されるためには、サイトマップは重要な要素です。
&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll-sitemap&lt;/code&gt;プラグインを使うことで、サイトマップが記述された&lt;code class=&quot;highlighter-rouge&quot;&gt;sitemap.xml&lt;/code&gt;を自動生成することが出来ます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jekyll/jekyll-sitemap&quot;&gt;jekyll-sitemap&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll-sitemap&lt;/code&gt;プラグインを使うには、&lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;に&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll-sitemap&lt;/code&gt;を追加します。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;plugins:
  - jekyll-sitemap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;そして、jekyllをビルドすると&lt;code class=&quot;highlighter-rouge&quot;&gt;sitemap.xml&lt;/code&gt;が生成されます。&lt;/p&gt;

&lt;h2 id=&quot;3-画像のオルトタグ&quot;&gt;3. 画像のオルトタグ&lt;/h2&gt;

&lt;p&gt;画像のオルトタグは、画像がない場合に表示されるテキストです。オルトタグはクローリング時にロードされるので、画像に記述しておく方がキーワードが多くなり上位に表示されやすくなります。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;img alt=&quot;jekyll seo&quot; title=&quot;Jekyll SEO&quot; src=&quot;/images/jekyll-seo.jpg&quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;4-レスポンシブ&quot;&gt;4. レスポンシブ&lt;/h2&gt;

&lt;p&gt;グーグルはレスポンシブなサイトでモバイルでも見やすいかということをSEOのランキングのパラメータに設定しています。
サイトがモバイルに対応しているかどうかは、 &lt;a href=&quot;https://search.google.com/test/mobile-friendly?utm_source=mft&amp;amp;utm_medium=redirect&amp;amp;utm_campaign=mft-redirect&quot;&gt;Mobile Friendly Test&lt;/a&gt;というサイトで確認することが出来ます。&lt;/p&gt;

&lt;p&gt;Jekyllのテーマは、モバイルに対応しているものがほとんどなので、非対応なものを使わない限りは大丈夫かと思います。&lt;/p&gt;

&lt;h2 id=&quot;5-スピード&quot;&gt;5. スピード&lt;/h2&gt;

&lt;p&gt;ランキング上位に表示されるにはページのロードスピードも重要です。
Jekyllのサイトは、通常十分早いですが、JavaScriptを使い過ぎたりするのは注意しましょう。&lt;/p&gt;
</description>
        <pubDate>Wed, 30 May 2018 00:00:00 +0900</pubDate>
        <link>https://micchyboy1023.github.io/development/2018/05/30/jekyll-seo.html</link>
        <guid isPermaLink="true">https://micchyboy1023.github.io/development/2018/05/30/jekyll-seo.html</guid>
        
        <category>Jekyll</category>
        
        <category>SEO</category>
        
        <category>ブログ</category>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>いよいよ来週！AppleのイベントWWDC2018で発表されそうなことまとめ</title>
        <description>&lt;p&gt;いよいよAppleの開発者向け会議&lt;strong&gt;WWDC2018(World Wide Developer Conference)&lt;/strong&gt;が来週となりました！&lt;/p&gt;

&lt;p&gt;今年のWWDCで発表されそうなことを噂からまとめてみました。&lt;/p&gt;

&lt;h1 id=&quot;uiのアップデート&quot;&gt;UIのアップデート&lt;/h1&gt;

&lt;p&gt;WWDCのページを見ると、立体的なUIのE部品がならんでいます。これはWWDC2018でiOSやmacOSのUIが変更されることを暗示しているのでしょうか？&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://micchyboy1023.github.io/assets/posts/2018-05-29/cover.png&quot; alt=&quot;WWDC2018&quot; title=&quot;WWDC2018&quot; /&gt;
画像出展:&lt;a href=&quot;https://developer.apple.com/wwdc/&quot;&gt;Apple&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;iOS7が出たのが今から5年前の2013年。&lt;/p&gt;

&lt;p&gt;当時はフラットデザインがかなり流行っていたころで、アップルもそれに追従する形でフラットデザインへと移行しました。
今思うと、iOS6以前はとてもダサく見えるので不思議です。。&lt;/p&gt;

&lt;p&gt;その後OSのアップデートを繰り返し、iOS11になりました。&lt;/p&gt;

&lt;p&gt;iOS7以降、基本的な部品は変わっていませんが、最近のアップルのデザインの特徴としては、&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;大きくて太い文字&lt;/li&gt;
  &lt;li&gt;ハンドルを使って引っ張りあげたり下げたりする半モーダル画面&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;などが挙げられます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://micchyboy1023.github.io/assets/posts/2018-05-29/map.png&quot; alt=&quot;map&quot; title=&quot;map&quot; /&gt;
&lt;em&gt;マップの例&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;特にUI部品の重なりは多用されているように見えるので、今年のWWDCでは&lt;strong&gt;Z軸（重なり）を使ったUIフレームワーク&lt;/strong&gt;へとアップデートされる可能性があるのではないでしょうか？&lt;/p&gt;

&lt;h1 id=&quot;ios12-watchos5-macos1014tvosなど&quot;&gt;iOS12, watchOS5, macOS10.14、tvOSなど&lt;/h1&gt;

&lt;p&gt;iOSはもちろん、その他のプラットフォームのOSもアップデートされるでしょう。&lt;/p&gt;

&lt;p&gt;噂によると、前に述べたUIのアップデートがなければ、今年のアップデートは安定性の向上など、比較的地味な発表で終わる可能性が高いようです。&lt;/p&gt;

&lt;h1 id=&quot;ハードウェア&quot;&gt;ハードウェア&lt;/h1&gt;

&lt;h2 id=&quot;airpower&quot;&gt;AirPower&lt;/h2&gt;

&lt;p&gt;昨年iPhoneXと同時に発表されたAirPowerですがWWDCで発売がアナウンスされるのはないでしょうか？&lt;/p&gt;

&lt;p&gt;AirPodsの無線充電ケースも発表されそうですね！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://micchyboy1023.github.io/assets/posts/2018-05-29/airpower.png&quot; alt=&quot;AirPower&quot; title=&quot;AirPower&quot; /&gt;
画像出展:&lt;a href=&quot;https://www.apple.com/jp/iphone-x/&quot;&gt;Apple&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;新型macbook-macbook-pro&quot;&gt;新型MacBook, MacBook Pro&lt;/h2&gt;

&lt;p&gt;昨年のWWDCではMacBook ProやiMac Proなど、新しいハードウェアも数々発表されました。
今年もMacBookがアップデートされるかもしれません。&lt;/p&gt;

&lt;h2 id=&quot;homepodが日本へ&quot;&gt;HomePodが日本へ&lt;/h2&gt;

&lt;p&gt;HomePodがようやく日本で発売されるかもしれません。
少し前にHomePodに日本語対応が追加されていたようです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.gizmodo.jp/2018/05/homepod-japanese-language.html&quot;&gt;HomePodの対応言語に日本語が追加。これはひょっとすると…&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;いずれにせよ、来週わかります。楽しみですね！&lt;/p&gt;
</description>
        <pubDate>Tue, 29 May 2018 00:00:00 +0900</pubDate>
        <link>https://micchyboy1023.github.io/gadget/2018/05/29/wwdc2018-prediction.html</link>
        <guid isPermaLink="true">https://micchyboy1023.github.io/gadget/2018/05/29/wwdc2018-prediction.html</guid>
        
        <category>Apple</category>
        
        <category>アップル</category>
        
        <category>WWDC</category>
        
        <category>iOS</category>
        
        <category>wawtchOS</category>
        
        <category>macOS</category>
        
        
        <category>gadget</category>
        
      </item>
    
      <item>
        <title>Ripple（リップル）のCTO Stefan Thomasが立ち上げたCoil社について調べてみました</title>
        <description>&lt;p&gt;5月14日、Ripple（リップル）社の元CTO Stefan Thomasがツイートを投稿しました。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Excited to launch &lt;a href=&quot;https://twitter.com/Coil_?ref_src=twsrc%5Etfw&quot;&gt;@Coil_&lt;/a&gt;, a new startup building &lt;a href=&quot;https://twitter.com/hashtag/micropayment?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#micropayment&lt;/a&gt; applications on &lt;a href=&quot;https://twitter.com/hashtag/XRP?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#XRP&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/Interledger?ref_src=twsrc%5Etfw&quot;&gt;@Interledger&lt;/a&gt;. We&amp;#39;re creating a new business model for the web! &lt;a href=&quot;https://t.co/X0WWxmulLQ&quot;&gt;https://t.co/X0WWxmulLQ&lt;/a&gt;&lt;br /&gt;1/5&lt;/p&gt;&amp;mdash; Stefan Thomas (@justmoon) &lt;a href=&quot;https://twitter.com/justmoon/status/996012724235759616?ref_src=twsrc%5Etfw&quot;&gt;2018年5月14日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;この投稿を見て、XRPを使った新しいサービスがローンチされたのかなと思ったのですが、よくよく読むと、Stefan Thomas氏自身がCoilという会社を立ち上げてmicropaymentに関する事業を展開していくということで、面白そうなので、Coilについて調べてみました。&lt;/p&gt;

&lt;h1 id=&quot;coilとは&quot;&gt;Coilとは&lt;/h1&gt;

&lt;p&gt;Coilとは一言でいうと、&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;XRPとInterLedgerを使ってWebをマネタイズするためのプラットフォーム&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;のようです。&lt;/p&gt;

&lt;p&gt;CoilのMediumの記事に詳しく書かれています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/coil/coil-building-a-new-business-model-for-the-web-d33124358b6&quot;&gt;Coil: Building a New Business Model for the Web&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;一部引用して和訳しておきます。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;the Internet’s “original sin”, the fact that on the web there isn’t an obvious way to make money outside of workarounds like advertising, paywalls, or selling user data.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;インターネットの原罪は、広告・課金・ユーザーデータを売る以外に収益を得る方法がWebにないことだ。&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I will be stepping down as CTO of Ripple to set up a new company called Coil. Coil will use Interledger to make the web a more vibrant market for apps and content&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;私(Stefan Thomas)はリップルのCTOを辞めて、Coilという会社を作る。CoilはInterlederを使ってウェブをアプリやコンテンツにとってより魅力的なマーケットにする&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Coil’s first product will be a flat-rate subscription for consumers which will allow them to support creators, breeze past paywalls, see less ads, and unlock additional features and content&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Coilの最初の製品は、クリエイターをサポートし、課金を無くし、広告を減らし、さらなるコンテンツを顧客に提供する。&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Coil will be the first company to pay out to any website using Web Monetization&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;CoilはIWeb Monetizationを使ってどんなウェブサイトでもマネタイズする最初の企業です。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;と以上のように、CoilとはWebサイトをマネタイズするための新しい支払いの仕組みを作る会社のようですね。&lt;/p&gt;

&lt;p&gt;広告、課金以外のマネタイズ手法、楽しみですね！&lt;/p&gt;

&lt;h1 id=&quot;stefan-thomasの一連のツイートの和訳&quot;&gt;Stefan Thomasの一連のツイートの和訳&lt;/h1&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;XRPとinterledger上に少額決済を実現するスタートアップCoilのローンチにワクワクしている。ウェブの新しいビジネスモデルを作っていく。&lt;a href=&quot;https://twitter.com/hashtag/xrp?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#xrp&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/ripple?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#ripple&lt;/a&gt; &lt;a href=&quot;https://t.co/RbBzMQMhzR&quot;&gt;https://t.co/RbBzMQMhzR&lt;/a&gt;&lt;/p&gt;&amp;mdash; Masamichi Ueta (@micchyboy1023) &lt;a href=&quot;https://twitter.com/micchyboy1023/status/1001065580571459584?ref_src=twsrc%5Etfw&quot;&gt;2018年5月28日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;.&lt;a href=&quot;https://twitter.com/EthanZ?ref_src=twsrc%5Etfw&quot;&gt;@ethanz&lt;/a&gt;が言うように、ウェブの原罪はマネタイズの手法が組み込まれていないことだ。だからウェブ上に構築されたモデルはほとんどが広告だった。しかし広告がマネタイズの答えではないことを我々は知っている。&lt;a href=&quot;https://twitter.com/hashtag/xrp?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#xrp&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/ripple?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#ripple&lt;/a&gt; &lt;a href=&quot;https://t.co/oDejBKquiD&quot;&gt;https://t.co/oDejBKquiD&lt;/a&gt;&lt;/p&gt;&amp;mdash; Masamichi Ueta (@micchyboy1023) &lt;a href=&quot;https://twitter.com/micchyboy1023/status/1001077886357393408?ref_src=twsrc%5Etfw&quot;&gt;2018年5月28日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;決済技術が未熟だったからこうなった。しかし、我々が構築したXRPとinterledgerの技術によって、非中央集権で、秒間数兆のトランザクションを処理できるようになった。&lt;a href=&quot;https://twitter.com/hashtag/xrp?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#xrp&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/ripple?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#ripple&lt;/a&gt; &lt;a href=&quot;https://t.co/zuTBqXIP8y&quot;&gt;https://t.co/zuTBqXIP8y&lt;/a&gt;&lt;/p&gt;&amp;mdash; Masamichi Ueta (@micchyboy1023) &lt;a href=&quot;https://twitter.com/micchyboy1023/status/1001078633329377282?ref_src=twsrc%5Etfw&quot;&gt;2018年5月28日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;この技術を使って、&lt;a href=&quot;https://twitter.com/Coil?ref_src=twsrc%5Etfw&quot;&gt;@Coil&lt;/a&gt; の最初のプロダクトは、定額課金によって、クリエイターをサポートし、有料の壁をなくし、より少ない広告を実現し、さらなる機能やコンテンツを追加できるようにするものだ。&lt;a href=&quot;https://twitter.com/hashtag/xrp?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#xrp&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/ripple?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#ripple&lt;/a&gt; &lt;a href=&quot;https://t.co/jh1b1oQyTf&quot;&gt;https://t.co/jh1b1oQyTf&lt;/a&gt;&lt;/p&gt;&amp;mdash; Masamichi Ueta (@micchyboy1023) &lt;a href=&quot;https://twitter.com/micchyboy1023/status/1001079792806969344?ref_src=twsrc%5Etfw&quot;&gt;2018年5月28日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;.&lt;a href=&quot;https://twitter.com/Ripple?ref_src=twsrc%5Etfw&quot;&gt;@Ripple&lt;/a&gt;の金銭的技術的支援を受けられることを幸運に思っている。&lt;a href=&quot;https://twitter.com/Coil?ref_src=twsrc%5Etfw&quot;&gt;@Coil&lt;/a&gt;がより健全なインターネットを実現するためのすべてが揃っている。&lt;a href=&quot;https://twitter.com/hashtag/xrp?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#xrp&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/ripple?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#ripple&lt;/a&gt; &lt;a href=&quot;https://t.co/KhuwavaEfh&quot;&gt;https://t.co/KhuwavaEfh&lt;/a&gt;&lt;/p&gt;&amp;mdash; Masamichi Ueta (@micchyboy1023) &lt;a href=&quot;https://twitter.com/micchyboy1023/status/1001080434606751746?ref_src=twsrc%5Etfw&quot;&gt;2018年5月28日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

</description>
        <pubDate>Mon, 28 May 2018 00:00:00 +0900</pubDate>
        <link>https://micchyboy1023.github.io/cryptocurrency/2018/05/28/coil-xrp.html</link>
        <guid isPermaLink="true">https://micchyboy1023.github.io/cryptocurrency/2018/05/28/coil-xrp.html</guid>
        
        <category>Ripple</category>
        
        <category>リップル</category>
        
        <category>XRP</category>
        
        <category>Coil</category>
        
        
        <category>cryptocurrency</category>
        
      </item>
    
      <item>
        <title>横浜お出かけスポット！横浜中華街にあるヨコハマおもしろ水族館に行ってきました</title>
        <description>&lt;h1 id=&quot;ヨコハマおもしろ水族館&quot;&gt;ヨコハマおもしろ水族館&lt;/h1&gt;

&lt;p&gt;横浜中華街にある、ヨコハマおもしろ水族館に行ってきました！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://micchyboy1023.github.io/assets/posts/2018-05-26/cover.jpg&quot; alt=&quot;横浜中華街&quot; title=&quot;横浜中華街&quot; /&gt;&lt;/p&gt;

&lt;p&gt;みなとみらい線の横浜中華街駅を出て中華街に入り、進んでいくとありました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://micchyboy1023.github.io/assets/posts/2018-05-26/suizokukan1.jpg&quot; alt=&quot;ヨコハマおもしろ水族館&quot; title=&quot;ヨコハマおもしろ水族館&quot; /&gt;&lt;/p&gt;

&lt;p&gt;入場料は、&lt;strong&gt;大人1400円&lt;/strong&gt;ですが、クーポンを持っていたため&lt;strong&gt;1000円&lt;/strong&gt;でした。&lt;/p&gt;

&lt;p&gt;中に入るとこんな感じです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://micchyboy1023.github.io/assets/posts/2018-05-26/suizokukan2.jpg&quot; alt=&quot;ヨコハマおもしろ水族館&quot; title=&quot;ヨコハマおもしろ水族館&quot; /&gt;&lt;/p&gt;

&lt;p&gt;全体的に、レトロというか、中華風なのか？という雰囲気でした。
水族館自体はビルの3階のみで、中はそんなに広くないですが、それぞれの展示にクイズがあったり、餌やりを間近でみれたりと、子供が楽しむにはちょうどいい感じでした。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://micchyboy1023.github.io/assets/posts/2018-05-26/suizokukan3.jpg&quot; alt=&quot;ヨコハマおもしろ水族館&quot; title=&quot;ヨコハマおもしろ水族館&quot; /&gt;&lt;/p&gt;

&lt;p&gt;子供広場の方にいくと、水槽が入った滑り台やジャングルジムがあり、遊具で遊ぶこともできます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://micchyboy1023.github.io/assets/posts/2018-05-26/suizokukan4.jpg&quot; alt=&quot;ヨコハマおもしろ水族館&quot; title=&quot;ヨコハマおもしろ水族館&quot; /&gt;&lt;/p&gt;

&lt;p&gt;珍しいダイオウグソクムシが展示されていたりとなかなかコアな水族館で楽しめました。&lt;/p&gt;

&lt;h2 id=&quot;山下公園で休憩&quot;&gt;山下公園で休憩&lt;/h2&gt;

&lt;p&gt;水族館の後は、山下公園が近いのでそこでのんびりと休憩しました。&lt;/p&gt;

&lt;p&gt;ドラゴンボートレースというイベントが開催されていましたね。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://micchyboy1023.github.io/assets/posts/2018-05-26/dragonboart.jpg&quot; alt=&quot;ドラゴンボートレース&quot; title=&quot;ドラゴンボートレース&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 26 May 2018 00:00:00 +0900</pubDate>
        <link>https://micchyboy1023.github.io/family/2018/05/26/yokohama-omorhiso-suziokukan.html</link>
        <guid isPermaLink="true">https://micchyboy1023.github.io/family/2018/05/26/yokohama-omorhiso-suziokukan.html</guid>
        
        <category>横浜中華街</category>
        
        <category>ヨコハマおもしろ水族館</category>
        
        <category>水族館</category>
        
        <category>DRAGON BOART RACE</category>
        
        
        <category>family</category>
        
      </item>
    
      <item>
        <title>江ノ電に乗って江ノ島にいったら富士山が見えた</title>
        <description>&lt;p&gt;今日は非常に天気がよkくて、江ノ電に乗って江ノ島にいったら富士山が見えました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://micchyboy1023.github.io/assets/posts/2018-05-20/enoshima.jpg&quot; alt=&quot;江ノ島&quot; title=&quot;江ノ島&quot; /&gt;&lt;/p&gt;

&lt;p&gt;いい景色でした。
晴れの日に行ってみるのはどうでしょうか？&lt;/p&gt;
</description>
        <pubDate>Sun, 20 May 2018 23:00:00 +0900</pubDate>
        <link>https://micchyboy1023.github.io/family/2018/05/20/enoshima.html</link>
        <guid isPermaLink="true">https://micchyboy1023.github.io/family/2018/05/20/enoshima.html</guid>
        
        <category>江ノ電</category>
        
        <category>江ノ島</category>
        
        
        <category>family</category>
        
      </item>
    
      <item>
        <title>GitHubのコミットログ一覧を表示するGitHub Contributions Chart Generator</title>
        <description>&lt;h1 id=&quot;githubのコミットログ一覧を表示する&quot;&gt;GitHubのコミットログ一覧を表示する&lt;/h1&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Hi 👋&lt;br /&gt;&lt;br /&gt;I made a simple tool to generate an image of all your Github contributions! So you can tweet it ✨&lt;br /&gt;&lt;br /&gt;Check it out here: &lt;a href=&quot;https://t.co/boeScBUOza&quot;&gt;https://t.co/boeScBUOza&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Disclaimer: It’s still very raw. Just wanted something for myself, but feel free to send PRs and submit issues ♥️ &lt;a href=&quot;https://t.co/wgVLK7t0w4&quot;&gt;pic.twitter.com/wgVLK7t0w4&lt;/a&gt;&lt;/p&gt;&amp;mdash; Sallar 👨🏻‍💻 (@sallar) &lt;a href=&quot;https://twitter.com/sallar/status/991307546978930688?ref_src=twsrc%5Etfw&quot;&gt;2018年5月1日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;GitHubのコミットログ一覧を表示する&lt;strong&gt;GitHub Contributions Chart Generator&lt;/strong&gt;です。&lt;/p&gt;

&lt;p&gt;2015年の終わり頃から、GitHubに毎日コミットしようという自分ルールを作って実践してきたので、ログを作って見ました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://micchyboy1023.github.io/assets/posts/2018-05-20/contributions.png&quot; alt=&quot;GitHub Contribution&quot; title=&quot;GitHub Contribution&quot; /&gt;&lt;/p&gt;

&lt;p&gt;毎日コミットすることはできませんでしたが、けっこう草を生やすことができました！&lt;/p&gt;

&lt;p&gt;以前から活動していたチーム活動がなくなってしまいプライベートリポジトリをGitLabに移行したので、記念に作っておきました。
&lt;strong&gt;現在私のアカウントに草は生えておりません。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;会社でGitHubを使用するようになったので、個人ではパブリックなリポジトリへの貢献を増やしていきたいと思います。&lt;/p&gt;
</description>
        <pubDate>Sun, 20 May 2018 00:00:00 +0900</pubDate>
        <link>https://micchyboy1023.github.io/development/2018/05/20/github-commit-history.html</link>
        <guid isPermaLink="true">https://micchyboy1023.github.io/development/2018/05/20/github-commit-history.html</guid>
        
        <category>GitHub</category>
        
        <category>git</category>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>横浜周辺の週末子供とお出かけスポット！こども自然公園（大池公園）の紹介</title>
        <description>&lt;h1 id=&quot;こども自然公園&quot;&gt;こども自然公園&lt;/h1&gt;

&lt;p&gt;3歳の子供と0歳の子供がいまして、週末は家にいて動かないのもよくないと思い、よく公園にお出かけしています。&lt;/p&gt;

&lt;p&gt;その中でもよく行くオススメの公園がこども自然公園（大池公園）です。&lt;/p&gt;

&lt;p&gt;Webサイトはこちら
&lt;a href=&quot;http://www.city.yokohama.lg.jp/asahi/guide/shisetsu/midori/park/kodomoshizen/&quot;&gt;こども自然公園（こどもしぜんこうえん）&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;公園の中心には大きな池がありまして、亀やカモが泳いでいたり、釣りをしている人がいます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://micchyboy1023.github.io/assets/posts/2018-05-19/kodomoshizenkouen.jpg&quot; alt=&quot;こども自然公園（大池公園）&quot; title=&quot;こども自然公園（大池公園）&quot; /&gt;&lt;/p&gt;

&lt;p&gt;春にはこの池周辺に桜が咲いて、花見にぴったりですよ！&lt;/p&gt;

&lt;h2 id=&quot;とりでの森&quot;&gt;とりでの森&lt;/h2&gt;

&lt;p&gt;そして何と言っても、こども自然公園のアスレチック、とりでの森がすごいです。&lt;/p&gt;

&lt;p&gt;こちら&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://micchyboy1023.github.io/assets/posts/2018-05-19/toridenomori.jpg&quot; alt=&quot;とりでの森&quot; title=&quot;とりでの森&quot; /&gt;
&lt;img src=&quot;https://micchyboy1023.github.io/assets/posts/2018-05-19/toridenomori2.jpg&quot; alt=&quot;とりでの森&quot; title=&quot;とりでの森&quot; /&gt;&lt;/p&gt;

&lt;p&gt;斜面一面がアスレチックになっています。&lt;/p&gt;

&lt;p&gt;何度も登るのは結構大変で、子供の体力がつきそうです。&lt;/p&gt;

&lt;h2 id=&quot;まきが原ちびっこ動物園&quot;&gt;まきが原ちびっこ動物園&lt;/h2&gt;

&lt;p&gt;公園の奥にはちびっこ動物園があり、ハツカネズミ・モルモット・チャボと触れ合うことができます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.hama-midorinokyokai.or.jp/zoo/makigahara/&quot;&gt;まきが原ちびっこ動物園&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://micchyboy1023.github.io/assets/posts/2018-05-19/makigaharadoubutsuen.jpg&quot; alt=&quot;まきが原ちびっこ動物園&quot; title=&quot;まきが原ちびっこ動物園&quot; /&gt;
&lt;img src=&quot;https://micchyboy1023.github.io/assets/posts/2018-05-19/makigaharadoubutsuen2.jpg&quot; alt=&quot;まきが原ちびっこ動物園&quot; title=&quot;まきが原ちびっこ動物園&quot; /&gt;&lt;/p&gt;

&lt;p&gt;触れ合える日や時間は決まっているので、事前にWebサイトで確認することをオススメします。&lt;/p&gt;
</description>
        <pubDate>Sat, 19 May 2018 00:00:00 +0900</pubDate>
        <link>https://micchyboy1023.github.io/family/2018/05/19/kodomoshizenkouen.html</link>
        <guid isPermaLink="true">https://micchyboy1023.github.io/family/2018/05/19/kodomoshizenkouen.html</guid>
        
        <category>横浜</category>
        
        <category>こども自然公園</category>
        
        <category>大池公園</category>
        
        <category>お出かけ</category>
        
        
        <category>family</category>
        
      </item>
    
  </channel>
</rss>
