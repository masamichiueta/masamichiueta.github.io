<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Masamichi Ueta</title>
    <description>エンジニアリング・デザイン・日常</description>
    <link>https://masamichi.mehttps://masamichi.me/</link>
    <atom:link href="https://masamichi.me/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 22 Sep 2018 22:54:29 +0900</pubDate>
    <lastBuildDate>Sat, 22 Sep 2018 22:54:29 +0900</lastBuildDate>
    <generator>Jekyll v3.8.1</generator>
    
      <item>
        <title>App Store ConnectにアプリをアップロードしたらToo many symbol filesと怒られた</title>
        <description>&lt;p&gt;App Store ConnectにXcodeからアプリをアップロードすると、少し時間がたってからメールが届きました。&lt;/p&gt;

&lt;p&gt;そのメールはアプリに問題が見つかりましたという題名で、&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Too many symbol files&lt;/code&gt; というエラーが書かれていました。&lt;/p&gt;

&lt;p&gt;iOS11からは32bitアプリのサポートが切られたことが影響している為でしょうか。
調べたところ、どうやらcocoapodsが生成しているフレームワークのアーキテクチャの設定ぽいということがわかりました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/CocoaPods/CocoaPods/issues/7111&quot;&gt;CocoaPods leaves dSYMs for unused architectures in archive&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;アプリの&lt;code class=&quot;highlighter-rouge&quot;&gt;valid architecture&lt;/code&gt;を&lt;code class=&quot;highlighter-rouge&quot;&gt;arm64&lt;/code&gt;にすれば、64ビットになって解決するようです。&lt;/p&gt;

&lt;p&gt;64ビットにする方法はこちらが参考になりました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/Yasunobu/items/59c89facfcbb36bdedda&quot;&gt;【iOS】iPhoneアプリを64bit端末のみをターゲットにする方法&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 19 Aug 2018 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/development/2018/08/19/too-many-symbol-files.html</link>
        <guid isPermaLink="true">https://masamichi.me/development/2018/08/19/too-many-symbol-files.html</guid>
        
        <category>App Store Connect</category>
        
        <category>iOS</category>
        
        <category>cocoapods</category>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>元19, 3B LAB.☆Sの岡平健治さんがYoutuberに。Mutuber KENJIのMusicTV配信が始まりました</title>
        <description>&lt;p&gt;元19, 3B LAB.☆Sの岡平健治さんがYoutuberとして活動開始されました。
チャンネルはMutuber KENJIのMusicTV。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCpqKhYHtt9ueacox1yxjB_Q?app=desktop&amp;amp;spfreload=10&quot;&gt;Mutuber KENJIのMusicTV&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;記念すべき第1回目は、19の名曲「熊じいちゃん」を歌われています。&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/ZXYrBGALr34&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;毎週水曜日に更新されるようなので、要チェックです！&lt;/p&gt;
</description>
        <pubDate>Fri, 17 Aug 2018 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/hobby/2018/08/17/mutuber-okahirakenji.html</link>
        <guid isPermaLink="true">https://masamichi.me/hobby/2018/08/17/mutuber-okahirakenji.html</guid>
        
        <category>岡平健治</category>
        
        <category>19</category>
        
        <category>ジューク</category>
        
        <category>3B Lab</category>
        
        
        <category>hobby</category>
        
      </item>
    
      <item>
        <title>Flutterの始め方</title>
        <description>&lt;p&gt;Dart言語を使ったクロスプラットフォーム(iOS, Android)のモバイルアプリ開発フレームワークであるFlutterを始めました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://flutter.io&quot;&gt;Flutter - Beautiful native apps in record time&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;XcodeやAndroid Studioは事前にインストールします。&lt;/p&gt;

&lt;h1 id=&quot;flutter-sdkのインストール&quot;&gt;Flutter sdkのインストール&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://flutter.io/setup-macos/&quot;&gt;Get Started&lt;/a&gt;を参考に、flutter sdkをインストールします。&lt;/p&gt;

&lt;p&gt;flutter sdkをダウンロードして、zipを展開し、$HOME/.bash_profileにPATHを通します。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ export PTAH=path/to/flutter/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;パスを通したあとは、doctorコマンドを使って環境設定状態を確認します。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ flutter doctor
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;私の場合は以下のように表示されました。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  ╔════════════════════════════════════════════════════════════════════════════╗
  ║ WARNING: your installation of Flutter is 54 days old.                      ║
  ║                                                                            ║
  ║ To update to the latest version, run &quot;flutter upgrade&quot;.                    ║
  ╚════════════════════════════════════════════════════════════════════════════╝



  ╔════════════════════════════════════════════════════════════════════════════╗
  ║                 Welcome to Flutter! - https://flutter.io                   ║
  ║                                                                            ║
  ║ The Flutter tool anonymously reports feature usage statistics and crash    ║
  ║ reports to Google in order to help Google contribute improvements to       ║
  ║ Flutter over time.                                                         ║
  ║                                                                            ║
  ║ Read about data we send with crash reports:                                ║
  ║ https://github.com/flutter/flutter/wiki/Flutter-CLI-crash-reporting        ║
  ║                                                                            ║
  ║ See Google's privacy policy:                                               ║
  ║ https://www.google.com/intl/en/policies/privacy/                           ║
  ║                                                                            ║
  ║ Use &quot;flutter config --no-analytics&quot; to disable analytics and crash         ║
  ║ reporting.                                                                 ║
  ╚════════════════════════════════════════════════════════════════════════════╝
  
Doctor summary (to see all details, run flutter doctor -v):
[✓] Flutter (Channel beta, v0.5.1, on Mac OS X 10.13.6 17G65, locale en-JP)
[!] Android toolchain - develop for Android devices (Android SDK 28.0.1)
    ! Some Android licenses not accepted.  To resolve this, run: flutter doctor --android-licenses
[!] iOS toolchain - develop for iOS devices (Xcode 9.4.1)
    ✗ libimobiledevice and ideviceinstaller are not installed. To install, run:
        brew install --HEAD libimobiledevice
        brew install ideviceinstaller
    ✗ ios-deploy not installed. To install:
        brew install ios-deploy
[✓] Android Studio (version 3.1)
    ✗ Flutter plugin not installed; this adds Flutter specific functionality.
    ✗ Dart plugin not installed; this adds Dart specific functionality.
[!] VS Code (version 1.24.1)
[✓] Connected devices (1 available)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;とりあえずiOSで動かすために、言われた通りライブラリ周りをインストールして行きます。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ brew install --HEAD libimobiledevice
$ brew install ideviceinstaller ios-deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;その後もう一度&lt;code class=&quot;highlighter-rouge&quot;&gt;flutter doctor&lt;/code&gt;を実行すると、iOS toolchainではPython moduleが入ってないと怒られました。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[✓] Flutter (Channel beta, v0.5.1, on Mac OS X 10.13.6 17G65, locale en-JP)
[!] Android toolchain - develop for Android devices (Android SDK 28.0.1)
    ! Some Android licenses not accepted.  To resolve this, run: flutter doctor --android-licenses
[!] iOS toolchain - develop for iOS devices (Xcode 9.4.1)
    ✗ Missing Xcode dependency: Python module &quot;six&quot;.
      Install via 'pip install six' or 'sudo easy_install six'.
[✓] Android Studio (version 3.1)
    ✗ Flutter plugin not installed; this adds Flutter specific functionality.
    ✗ Dart plugin not installed; this adds Dart specific functionality.
[!] VS Code (version 1.24.1)
[✓] Connected devices (1 available)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;なので、言われた通り&lt;code class=&quot;highlighter-rouge&quot;&gt;six&lt;/code&gt;モジュールをpipでインストールします。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ pip install six
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;vs-codeにflutterの拡張機能をインストールする&quot;&gt;VS Codeにflutterの拡張機能をインストールする&lt;/h1&gt;

&lt;p&gt;VS Codeをメインのエディタとして使用しているので、VS Codeの拡張機能をインストールします。&lt;/p&gt;

&lt;p&gt;Extensionsパネルでflutterと検索すると、&lt;code class=&quot;highlighter-rouge&quot;&gt;Flutter&lt;/code&gt;モジュールが見つかるのでインストールします。&lt;code class=&quot;highlighter-rouge&quot;&gt;Dart&lt;/code&gt;モジュールは同時にインストールされます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2018-07-23/vscode.png&quot; alt=&quot;VS Code Flutter Extension&quot; title=&quot;VS Code Flutter Extension&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;vs-codeでサンプルを作って実行する&quot;&gt;VS Codeでサンプルを作って実行する&lt;/h1&gt;

&lt;p&gt;VS Codeのコマンドパレット(Ctrl+Shift+P)で、&lt;code class=&quot;highlighter-rouge&quot;&gt;Flutter: New Project&lt;/code&gt;を選択します。プロジェクト名の入力を求められるので、適当に入力します。&lt;/p&gt;

&lt;p&gt;するとプロジェクトが作成されて、カウントアップアプリのサンプルが実行できる状態になります。&lt;/p&gt;

&lt;p&gt;Debugウィンドウから、Start Debuggingボタンを押すと、シミュレータが起動してアプリが実行されます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2018-07-23/sample.png&quot; alt=&quot;Flutter sample&quot; title=&quot;Flutter sample&quot; /&gt;&lt;/p&gt;

&lt;p&gt;まだまだFlutter&amp;amp;Dart初心者で、Flutterの良さや、&lt;code class=&quot;highlighter-rouge&quot;&gt;Xamarin&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;ReactNative&lt;/code&gt;のような他のクロスプラットフォーム開発フレームワークに比べてどうなのかというところはわかってませんが、これから研究していこうと思います。&lt;/p&gt;
</description>
        <pubDate>Mon, 23 Jul 2018 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/development/2018/07/23/get-start-flutter.html</link>
        <guid isPermaLink="true">https://masamichi.me/development/2018/07/23/get-start-flutter.html</guid>
        
        <category>Flutter</category>
        
        <category>iOS</category>
        
        <category>Android</category>
        
        <category>モバイルアプリ</category>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>神奈川公園お出かけスポット！大和ゆとりの森に行ってきました</title>
        <description>&lt;p&gt;今日は神奈川県大和市にある、大和ゆとりの森に行ってきました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nicspark.com/yutori/&quot;&gt;大和ゆとりの森&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;横浜周辺の公園はすでに開拓したので、今日は少し足を伸ばしてみました。&lt;/p&gt;

&lt;p&gt;asobii横浜の&lt;a href=&quot;https://asobii.net/25756&quot;&gt;珍しい遊具にすごく広い公園。神奈川県の別の「市」へ行ってみよう！神奈川県で探す、近いのにいつもと違う公園11選&lt;/a&gt;の記事を参考にしました。&lt;/p&gt;

&lt;h1 id=&quot;大和ゆとりの森&quot;&gt;大和ゆとりの森&lt;/h1&gt;

&lt;p&gt;横浜から車で30分ほどで、保土ヶ谷バイパスを下川井で降りて左折語直進で到着します。&lt;/p&gt;

&lt;p&gt;到着すると早速遊具が！事前に調べていた通り、かなり豪華な遊具でした。&lt;/p&gt;

&lt;p&gt;入り口から見た遊具エリアの全体像です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2018-07-22/yugu1.jpg&quot; alt=&quot;ゆとりの森 遊具 全体像&quot; title=&quot;ゆとりの森 遊具 全体像&quot; /&gt;&lt;/p&gt;

&lt;p&gt;中央にはロープの山！
&lt;img src=&quot;/assets/posts/2018-07-22/cover.jpg&quot; alt=&quot;ゆとりの森 遊具 ロープ&quot; title=&quot;ゆとりの森 遊具 ロープ&quot; /&gt;&lt;/p&gt;

&lt;p&gt;色々な大きさの滑り台ももちろんあります。
&lt;img src=&quot;/assets/posts/2018-07-22/yugu2.jpg&quot; alt=&quot;ゆとりの森 遊具 滑り台&quot; title=&quot;ゆとりの森 遊具 滑り台&quot; /&gt;
&lt;img src=&quot;/assets/posts/2018-07-22/yugu3.jpg&quot; alt=&quot;ゆとりの森 遊具 滑り台&quot; title=&quot;ゆとりの森 遊具 滑り台&quot; /&gt;&lt;/p&gt;

&lt;p&gt;なかなかこのレベルの遊具がある公園はないのではないでしょうか？息子も興奮して遊んでしました。&lt;/p&gt;

&lt;p&gt;他にも夏にはありがたい霧がでるトンネルがあったり
&lt;img src=&quot;/assets/posts/2018-07-22/shower.jpg&quot; alt=&quot;ゆとりの森 霧がでるトンネル&quot; title=&quot;ゆとりの森 霧がでるトンネル&quot; /&gt;&lt;/p&gt;

&lt;p&gt;砂場が3つ
&lt;img src=&quot;/assets/posts/2018-07-22/sunaba.jpg&quot; alt=&quot;ゆとりの森 砂場&quot; title=&quot;ゆとりの森 砂場&quot; /&gt;&lt;/p&gt;

&lt;p&gt;トランポリンの山もありましたが、今日は暑すぎて入れなくなっていました。
&lt;img src=&quot;/assets/posts/2018-07-22/jump.jpg&quot; alt=&quot;ゆとりの森 トランポリン&quot; title=&quot;ゆとりの森 トランポリン&quot; /&gt;&lt;/p&gt;

&lt;p&gt;公園中央には、クーラーが効いていて売店もある休憩所があったり、
&lt;img src=&quot;/assets/posts/2018-07-22/rest.jpg&quot; alt=&quot;ゆとりの森 休憩所&quot; title=&quot;ゆとりの森 休憩所&quot; /&gt;&lt;/p&gt;

&lt;p&gt;川が流れている芝生エリアがあったり
&lt;img src=&quot;/assets/posts/2018-07-22/grass.jpg&quot; alt=&quot;ゆとりの森 芝生エリア&quot; title=&quot;ゆとりの森 芝生エリア&quot; /&gt;&lt;/p&gt;

&lt;p&gt;初めていきましたが、かなり楽しめました。&lt;/p&gt;

&lt;p&gt;今日は暑すぎて遊具も熱くなってしまっていましたが、もう少し涼しくなるとより楽しめると思います。&lt;/p&gt;
</description>
        <pubDate>Sun, 22 Jul 2018 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/family/2018/07/22/yamatoshi-yutorinomori.html</link>
        <guid isPermaLink="true">https://masamichi.me/family/2018/07/22/yamatoshi-yutorinomori.html</guid>
        
        <category>ゆとりの森</category>
        
        <category>神奈川県</category>
        
        <category>公園</category>
        
        <category>お出かけ</category>
        
        
        <category>family</category>
        
      </item>
    
      <item>
        <title>Amazonプライムデー2018　セールで買ったものまとめ</title>
        <description>&lt;h1 id=&quot;amazon-プライムデー&quot;&gt;Amazon プライムデー&lt;/h1&gt;

&lt;p&gt;今年もプライムデーが始まりました。&lt;/p&gt;

&lt;p&gt;プライムデーは、プライム会員限定でセール品を買える日です！&lt;/p&gt;

&lt;p&gt;毎年プライムデーやサイバーマンデーセールではその時必要な物を何かしら買っていて、今回も色々と買いました。&lt;/p&gt;

&lt;p&gt;買ったものをご紹介します。&lt;/p&gt;

&lt;h2 id=&quot;ビデオカメラ&quot;&gt;ビデオカメラ&lt;/h2&gt;

&lt;p&gt;今回のプライムデーではビデオカメラを買いました。買ったのは、Panasonic HDビデオカメラ V360MS 16GB 高倍率90倍ズーム ブラック HC-V360MS-Kです。&lt;/p&gt;

&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B01JRFABS4&amp;amp;linkId=ceb47439e0f836195cf917c5bdc6d703&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;子供が生まれてから、ビデオカメラを持っていた方がいいかなと思いつつも、スマホやカメラの動画で済ましていたのですが、今回プライムデーの事前告知でこちらのビデオカメラが予告されていたので、購入しました。&lt;/p&gt;

&lt;p&gt;4kではないですが、値段もそこまで高くないので入門機としては良さそうだと思い購入しました。&lt;/p&gt;

&lt;p&gt;軽くて小さそうなので、持ち運びやすくて色々なところでビデオが撮れそうです。&lt;/p&gt;

&lt;p&gt;ビデオカメラに合わせて、SDカードも購入しました。64GBが安かったので、購入。こちらはタイムセールですぐに100%売り切れてしまいましたが、キャンセル待ちで購入できました。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I-O DATA SDXCカード 64GB UHS-I(スピードクラス1)/Class10対応 耐X線 EX-SDU1/64G&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B01J5KLBGM&amp;amp;linkId=d78e9976d97d891505895761266fbb77&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;日用品&quot;&gt;日用品&lt;/h2&gt;

&lt;p&gt;セールのメインは日用品で、安くなっていたものをたくさん買いました。日用品はどの道必要になるので我が家では買い溜めしていて、セールなど安い時に買っています。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;【まとめ買い】バスマジックリン 泡立ちスプレー SUPERCLEAN グリーンハーブの香り つめかえ用 330ml × 4個&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B07BH54SW6&amp;amp;linkId=07a3a449610f51709c62dfc73d0d6dc1&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;【ケース販売】 アリエール 洗濯洗剤 液体 イオンパワージェルサイエンスプラス詰め替え 超ジャンボ1.62kg×6個&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B073VM9T53&amp;amp;linkId=a7b5955c127af580108942c51bc510cd&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;【大容量】パンテーン シャンプー エクストラダメージケア 詰替用 2000ml&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B00XXGCATW&amp;amp;linkId=ab49c6fb57a217d039d37422be0d8609&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;【大容量】 パンテーン トリートメントコンディショナー エクストラダメージケア 詰替用 超特大サイズ 1.7kg&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B01MG064E9&amp;amp;linkId=5033089b71f4086454a42bb118633d58&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;【大容量】ビオレU つめかえ 1350ml&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B0743GXHY6&amp;amp;linkId=467c4e0ac2dc3f139a87682ea7b9fa38&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;【まとめ買い】トイレクイックル つめかえ用 ジャンボパック 20枚 × 3個&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B07BH52QPY&amp;amp;linkId=108015c4b86944dafb204db8b7e04fdf&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;Amazon.co.jp限定】キレイキレイ 薬用 泡ハンドソープ シトラスフルーティの香り 詰め替え特大 800ml×2個 除菌シート付(医薬部外品)&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B07B53LVH6&amp;amp;linkId=158e77415d7c0bc904768e4e224b1120&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;[Amazonブランド]Happy Belly 強炭酸水 レモン 500ml×24本&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B077RQGTJF&amp;amp;linkId=a788773afc0a7cffd23e87bed027a25a&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;ベビー用品&quot;&gt;ベビー用品&lt;/h2&gt;

&lt;p&gt;ベビー用品もお得そうなものを購入しました！ものによっては、赤ちゃん本舗で買う方が安かったりするようなので、リサーチしてから購入することをお勧めします。&lt;/p&gt;

&lt;p&gt;ベビー用品は、レジで購入時に表示価格から割り引かれるパターンでしたが、この辺り他の商品と扱いが異なるのは何か理由があるのでしょうか。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;グーン パンツ L (9~14kg) 174枚(58枚×3) 男の子 まっさらさら通気 【ケース販売】&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B01IQTYZ2U&amp;amp;linkId=ebe119d6b82644950aec34e987bb02ba&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;ムーニー おしりふき やわらか素材 純水99% 詰替 1920枚(80枚×24)【ケース品】&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B00UF8VOFM&amp;amp;linkId=35212158c1a3aff869cd0e8c934069e7&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;以上、今年もプライムデーで購入したものでした。&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Jul 2018 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/family/2018/07/16/amazon-prime-day-2018.html</link>
        <guid isPermaLink="true">https://masamichi.me/family/2018/07/16/amazon-prime-day-2018.html</guid>
        
        <category>プライムデー</category>
        
        <category>Amazon</category>
        
        
        <category>family</category>
        
      </item>
    
      <item>
        <title>横浜マラソン2018に当選したので参加します</title>
        <description>&lt;p&gt;4月に横浜マラソンに申し込んで、一般枠で当選していました。
連絡が6月に来ていて、参加料を振り込んだので横浜マラソンに参加します。&lt;/p&gt;

&lt;p&gt;ここ3年くらいは申し込んでいたのですが、今年はやっと当選しました！&lt;/p&gt;

&lt;p&gt;これから横浜マラソンに向けて練習を積み重ねて行こうと思います。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.yokohamamarathon.jp/2018/&quot;&gt;横浜マラソン2018&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Jul 2018 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/hobby/2018/07/15/yokohama-marathon-2018.html</link>
        <guid isPermaLink="true">https://masamichi.me/hobby/2018/07/15/yokohama-marathon-2018.html</guid>
        
        <category>横浜マラソン</category>
        
        
        <category>hobby</category>
        
      </item>
    
      <item>
        <title>Ledgerの新しいウォレット管理アプリ Ledger Liveの始め方</title>
        <description>&lt;h1 id=&quot;ledger-live&quot;&gt;Ledger Live&lt;/h1&gt;

&lt;p&gt;先週7/9にLedger Liveが発表されました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ledger.fr/2018/07/09/ledger-launches-ledger-live-the-all-in-one-companion-app-to-your-ledger-device/&quot;&gt;Ledger launches Ledger Live, the all-in-one companion app to your Ledger device&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;これまでChrome appとして提供されていた&lt;a href=&quot;https://www.ledgerwallet.com/apps/manager&quot;&gt;Ledger Manager&lt;/a&gt;や&lt;a href=&quot;https://www.ledgerwallet.com/apps&quot;&gt;各種walletアプリ&lt;/a&gt;などに取って代わる新しいアプリのようです。&lt;/p&gt;

&lt;p&gt;早速インストールして設定したので、手順を載せておきます。&lt;/p&gt;

&lt;h2 id=&quot;アプリをダウンロードインストールする&quot;&gt;アプリをダウンロード、インストールする&lt;/h2&gt;

&lt;p&gt;Ledger Liveのページから使用しているOS用のアプリをダウンロードします。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ledgerwallet.com/live&quot;&gt;Ledger Live&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ダウンロード後、アプリをインストールして起動します。&lt;/p&gt;

&lt;p&gt;起動すると以下のような画面が表示されます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2018-07-15/launch.png&quot; alt=&quot;Ledger Live 起動&quot; title=&quot;Ledger Live 起動&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Get Startedから始めます。&lt;/p&gt;

&lt;h2 id=&quot;デバイスの設定&quot;&gt;デバイスの設定&lt;/h2&gt;

&lt;p&gt;Get Startedを押すと、持っているハードウェアウォレットの設定が始まります。
私は既にLedger nano sを設定しているので、&lt;code class=&quot;highlighter-rouge&quot;&gt;Use a device that's already initialized&lt;/code&gt;を選択します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2018-07-15/device-setting.png&quot; alt=&quot;Ledger Live デバイス設定&quot; title=&quot;Ledger Live デバイス設定&quot; /&gt;&lt;/p&gt;

&lt;p&gt;次に設定するデバイスを選択します。私が使っているのはLedger nano sなので、Ledger nano sを選択しました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2018-07-15/select-device.png&quot; alt=&quot;Ledger Live デバイス選択&quot; title=&quot;Ledger Live デバイス選択&quot; /&gt;&lt;/p&gt;

&lt;p&gt;次にセキュリティーチェックリストに答えていきます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2018-07-15/security-checklist.png&quot; alt=&quot;Ledger Live セキュリティーチェックリスト&quot; title=&quot;Ledger Live セキュリティーチェックリスト&quot; /&gt;&lt;/p&gt;

&lt;p&gt;PINコード、リカバリーフレーズはLedger nano sを設定した際に設定ずみだと思います。&lt;/p&gt;

&lt;h2 id=&quot;ledger-liveのパスワードの設定&quot;&gt;Ledger Liveのパスワードの設定&lt;/h2&gt;

&lt;p&gt;次に、Ledger Liveアプリを起動する際のパスワードを設定します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2018-07-15/password.png&quot; alt=&quot;Ledger Live パスワード&quot; title=&quot;Ledger Live パスワード&quot; /&gt;&lt;/p&gt;

&lt;p&gt;このパスワードを忘れるとLedger Liveを再設定する必要があるようです。
また、Ledger Liveを再設定してもウォレットがなくなる訳ではないので、再設定すればまた使えるようになります。&lt;/p&gt;

&lt;p&gt;パスワードを登録するとアプリが使えるようになります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2018-07-15/app.png&quot; alt=&quot;Ledger Live アプリ&quot; title=&quot;Ledger Live アプリ&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;アカウントを追加する&quot;&gt;アカウントを追加する&lt;/h2&gt;

&lt;p&gt;初めはアカウントがないので、自分のウォレットにある資産を管理するためにアカウントを登録します。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Add Accounts&lt;/code&gt;ボタンをおすと追加する仮想通貨を選択する画面が出てくるので選択します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2018-07-15/addaccounts.png&quot; alt=&quot;Ledger Live アカウント追加&quot; title=&quot;Ledger Live アカウント追加&quot; /&gt;&lt;/p&gt;

&lt;p&gt;選択後はダイアログにしたがって設定を行えばOKです。
アカウントが追加されるとLedger Live上で送金や受け取りができたりリアルタイムで資産の状態を把握することができます。&lt;/p&gt;

&lt;p&gt;レート設定も設定画面から行えて、USDやJPYが選択できます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2018-07-15/setting.png&quot; alt=&quot;Ledger Live 設定&quot; title=&quot;Ledger Live 設定&quot; /&gt;&lt;/p&gt;

&lt;p&gt;これまではChrome appだった上に、それぞれのウォレットアプリが分かれていて若干使いにくかったですが、Ledger Liveのように一つのアプリとして提供されると使いやすいですね〜&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Jul 2018 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/cryptocurrency/2018/07/15/how-to-start-ledgaer-live.html</link>
        <guid isPermaLink="true">https://masamichi.me/cryptocurrency/2018/07/15/how-to-start-ledgaer-live.html</guid>
        
        <category>Ledger</category>
        
        <category>Ledger nano s</category>
        
        <category>Ledger manager</category>
        
        <category>Ledger live</category>
        
        
        <category>cryptocurrency</category>
        
      </item>
    
      <item>
        <title>2018年最新版　GitHub Pagesでカスタムドメインを使用する</title>
        <description>&lt;p&gt;このブログはGitHub Pagesとjekyllで運用していますが、カスタムドメインの設定をしたのでその方法を記載しておきます。&lt;/p&gt;

&lt;h1 id=&quot;ドメインを取得する&quot;&gt;ドメインを取得する&lt;/h1&gt;

&lt;p&gt;まず自分の使用したいドメインを取得します。私はムームードメインで取得しました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://muumuu-domain.com&quot;&gt;ムームードメイン&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;理由は、&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;色々なドメインを取り扱っている&lt;/li&gt;
  &lt;li&gt;安い&lt;/li&gt;
  &lt;li&gt;Whois情報公開代行が無料かつ複雑な条件がない&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;という点です。&lt;/p&gt;

&lt;p&gt;以前はお名前.comでドメインを取得していましたが、Whois情報公開代行について、ドメイン取得時に申し込まないと無料にならないという条件があり、当時設定していなかったため使用するのをやめました。こういう複雑な条件を設定しているところはあまり使いたくないですね。&lt;/p&gt;

&lt;h1 id=&quot;github-pagesのリポジトリを設定する&quot;&gt;GitHub Pagesのリポジトリを設定する&lt;/h1&gt;

&lt;p&gt;デフォルトのGitHub Pagesのリポジトリ名は、&lt;code class=&quot;highlighter-rouge&quot;&gt;username.github.io&lt;/code&gt;というリポジトリだと思います。このリポジトリの設定画面でカスタムドメインの設定をすることができます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-07-01/githubpages.png&quot; alt=&quot;GitHub Pagesの設定&quot; title=&quot;GitHub Pagesの設定&quot; /&gt;&lt;/p&gt;

&lt;p&gt;私のドメインは、&lt;code class=&quot;highlighter-rouge&quot;&gt;masamichi.me&lt;/code&gt;なので、そのドメインを入力し、Enforce HTTPSも有効化します。&lt;/p&gt;

&lt;p&gt;リポジトリには&lt;code class=&quot;highlighter-rouge&quot;&gt;CNAME&lt;/code&gt;というファイルが追加されます。&lt;/p&gt;

&lt;h1 id=&quot;ムームードメインでdnsの設定を行う&quot;&gt;ムームードメインでDNSの設定を行う&lt;/h1&gt;

&lt;p&gt;ムームードメインの管理画面で、ドメイン操作　→ ムームーDNSを選択します。&lt;/p&gt;

&lt;p&gt;自分が取得したドメインが表示されていると思いますが、処理の所の変更ボタンを押します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-07-01/mumu1.png&quot; alt=&quot;処理の変更&quot; title=&quot;処理の変更&quot; /&gt;&lt;/p&gt;

&lt;p&gt;設定2のところで、Aレコードを以下のIPアドレスで4つ追加します。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;185.199.108.153&lt;/li&gt;
  &lt;li&gt;185.199.109.153&lt;/li&gt;
  &lt;li&gt;185.199.110.153&lt;/li&gt;
  &lt;li&gt;185.199.111.153&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-07-01/mumu2.png&quot; alt=&quot;Aレコード追加&quot; title=&quot;Aレコード追加&quot; /&gt;&lt;/p&gt;

&lt;p&gt;以上で設定は完了です。&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Jul 2018 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/development/2018/07/01/github-custom-domain.html</link>
        <guid isPermaLink="true">https://masamichi.me/development/2018/07/01/github-custom-domain.html</guid>
        
        <category>GitHub</category>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>FirebaseとReactとReduxで認証付きのWebアプリのサンプルを作りました</title>
        <description>&lt;p&gt;先日書いた記事　&lt;a href=&quot;https://masamichi.me/development/2018/06/18/firebase-react-authenticaton.html&quot;&gt;FirebaseとReactで認証付きアプリのサンプルを実行するまで&lt;/a&gt; の続きで、この認証サンプルをReduxを使うように変更したサンプルを作ってみました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/masamichiueta/react-redux-firebase-auth&quot;&gt;masamichiueta/react-redux-firebase-auth&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;動きとしては、&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Auth&lt;/code&gt;コンポーネントの&lt;code class=&quot;highlighter-rouge&quot;&gt;componentWillMount&lt;/code&gt;で、&lt;code class=&quot;highlighter-rouge&quot;&gt;firebase.auth.onAuthStateChanged&lt;/code&gt;を登録して、すでにログイン状態だったら、stateにuserを登録してログイン後の画面を表示する。未ログイン状態だったらトップ画面を表示する。&lt;/li&gt;
  &lt;li&gt;ログインページでログインしたら&lt;code class=&quot;highlighter-rouge&quot;&gt;auth.doSignInWithEmailAndPassword&lt;/code&gt;で返ってくるユーザー情報をstateに登録する。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;という流れです。&lt;/p&gt;

&lt;p&gt;1つ悩んでいることがあって、クライアントでレンダリングするので、&lt;code class=&quot;highlighter-rouge&quot;&gt;firebase.auth.onAuthStateChanged&lt;/code&gt;のコールバックが呼ばれるまでに少しラグがあり、一瞬ローディング画面を出さざるを得ない形になっています。&lt;/p&gt;

&lt;p&gt;このあたりの解消法というか、ベストプラクティスがありましたら、&lt;a href=&quot;https://twitter.com/masamichiueta&quot;&gt;@masamichiueta&lt;/a&gt;に教えていただけるとありがたいです。&lt;/p&gt;
</description>
        <pubDate>Sat, 30 Jun 2018 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/development/2018/06/30/firebase-react-redux.html</link>
        <guid isPermaLink="true">https://masamichi.me/development/2018/06/30/firebase-react-redux.html</guid>
        
        <category>Firebase</category>
        
        <category>React</category>
        
        <category>Redux</category>
        
        <category>JavaScript</category>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>FirebaseとReactで認証付きアプリのサンプルを実行するまで</title>
        <description>&lt;p&gt;現在FirebaseでWebアプリを作っています。アプリを作る上でユーザー認証は欠かせないものの、作るのが大変ということが多いですが、Firebaseを使うと簡単に実装することができました。&lt;/p&gt;

&lt;p&gt;私はWebアプリを作る上でReactを使うことが多いので、今回はFirebaseとReactでユーザー認証を行うサンプルアプリを実行して、Firebaseでホスティングしてみました。&lt;/p&gt;

&lt;p&gt;今回参考にしたサンプルはこちらです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rwieruch/react-firebase-authentication&quot;&gt;rwieruch/react-firebase-authentication&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;firebaseにプロジェクトを登録する&quot;&gt;Firebaseにプロジェクトを登録する&lt;/h1&gt;

&lt;p&gt;まずは&lt;a href=&quot;https://console.firebase.google.com/&quot;&gt;Firebaseのコンソール&lt;/a&gt;から、プロジェクトを登録します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-06-18/addproject.png&quot; alt=&quot;プロジェクト登録&quot; title=&quot;プロジェクト登録&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;アプリを設定する&quot;&gt;アプリを設定する&lt;/h2&gt;

&lt;p&gt;プロジェクトを登録したらログインの設定を行います。&lt;/p&gt;

&lt;p&gt;サイドメニューの&lt;code class=&quot;highlighter-rouge&quot;&gt;Authentication&lt;/code&gt;から、メールアドレスによるログインを有効にします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-06-18/login.png&quot; alt=&quot;メールアドレスログイン&quot; title=&quot;メールアドレスログイン&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-06-18/loginbymail.png&quot; alt=&quot;メールアドレスログイン&quot; title=&quot;メールアドレスログイン&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;firebaseコマンドラインツールのインストール&quot;&gt;Firebaseコマンドラインツールのインストール&lt;/h2&gt;

&lt;p&gt;Firebaseにアプリをデプロイするには、Firebaseコマンドラインツールをインストールする必要があります。&lt;/p&gt;

&lt;p&gt;npmパッケージで提供されているので、npmでインストールします。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm intall -g firebase-tools
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;その後ターミナルから以下のコマンドを実行します。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;firebase login

cd /path/to/project/directory // プロジェクトディレクトリに移動

firebase init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;firebase init&lt;/code&gt;を実行すると、使用する機能やプロジェクトを聞かれるので該当するものを選択します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-06-18/functions.png&quot; alt=&quot;firebaseの機能&quot; title=&quot;firebaseの機能&quot; /&gt;&lt;/p&gt;

&lt;p&gt;この場合は、&lt;code class=&quot;highlighter-rouge&quot;&gt;Firestore&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;Hosting&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;Storage&lt;/code&gt;を有効にしてみました。&lt;/p&gt;

&lt;p&gt;また途中で、&lt;code class=&quot;highlighter-rouge&quot;&gt; What do you want to use as your public directory?&lt;/code&gt;と聞かれるので、Reactアプリに合わせるために&lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt;に変更してください。&lt;/p&gt;

&lt;p&gt;プロジェクトを作成した後も、&lt;code class=&quot;highlighter-rouge&quot;&gt;firebase.json&lt;/code&gt;を修正すれば変更可能です。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;init&lt;/code&gt;が終了したら、試しに&lt;code class=&quot;highlighter-rouge&quot;&gt;deploy&lt;/code&gt;してみます。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;firebase deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;これでデフォルトのページがデプロイされました。&lt;/p&gt;

&lt;h1 id=&quot;サンプルアプリを実行する&quot;&gt;サンプルアプリを実行する&lt;/h1&gt;

&lt;p&gt;認証用のサンプルアプリをダウンロードします。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rwieruch/react-firebase-authentication&quot;&gt;rwieruch/react-firebase-authentication&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ダウンロードしたら、&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;package.json
public
src
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;をコピーします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-06-18/project.png&quot; alt=&quot;プロジェクト&quot; title=&quot;プロジェクト&quot; /&gt;&lt;/p&gt;

&lt;p&gt;その後npmパッケージをインストールします。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;インストール後は、&lt;code class=&quot;highlighter-rouge&quot;&gt;src/firebase/firebase.js&lt;/code&gt;の中の&lt;code class=&quot;highlighter-rouge&quot;&gt;config&lt;/code&gt;を自分のプロジェクトのものに変更します。
&lt;code class=&quot;highlighter-rouge&quot;&gt;prod&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;が定義されていますが、一旦同じものを入れました。&lt;/p&gt;

&lt;p&gt;configは、Firebaseのコンソールのトップ、&lt;code class=&quot;highlighter-rouge&quot;&gt;ウェブアプリにFirebaseを追加&lt;/code&gt;から表示することができます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-06-18/addfirebase.png&quot; alt=&quot;ウェブアプリにFirebaseを追加&quot; title=&quot;ウェブアプリにFirebaseを追加&quot; /&gt;&lt;/p&gt;

&lt;p&gt;設定を書き換えたら、アプリをビルドしてfirebaseにデプロイします。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm run build
firebase deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;以上で、サンプルアプリがFirebaseにデプロイされました。&lt;/p&gt;

&lt;p&gt;デプロイ後以下のようなページが表示されていれば成功です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-06-18/sample.png&quot; alt=&quot;サンプル&quot; title=&quot;サンプル&quot; /&gt;&lt;/p&gt;

&lt;p&gt;サインアップページからユーザー登録をすると、Firebaseのユーザーが追加されます。&lt;/p&gt;
</description>
        <pubDate>Mon, 18 Jun 2018 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/development/2018/06/18/firebase-react-authenticaton.html</link>
        <guid isPermaLink="true">https://masamichi.me/development/2018/06/18/firebase-react-authenticaton.html</guid>
        
        <category>Firebase</category>
        
        <category>React</category>
        
        <category>JavaScript</category>
        
        
        <category>development</category>
        
      </item>
    
  </channel>
</rss>
