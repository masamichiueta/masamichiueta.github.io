<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Masamichi Ueta</title>
    <description>エンジニアリング・デザイン・日常</description>
    <link>https://masamichi.mehttps://masamichi.me/</link>
    <atom:link href="https://masamichi.me/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 28 Mar 2020 20:49:39 +0900</pubDate>
    <lastBuildDate>Sat, 28 Mar 2020 20:49:39 +0900</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>ほったらかし投資は難しいなという話</title>
        <description>&lt;p&gt;もうかれこれ5年くらい、いわゆるほったらかし投資をしています。&lt;/p&gt;

&lt;p&gt;毎月少額を特定の投資信託に積み立てていくというやつです。&lt;/p&gt;

&lt;p&gt;当時の私は全然お金の知識はなかったのですが、お金に詳しい友人から色々教えてもらい、本を買って少し勉強して始めました。&lt;/p&gt;

&lt;p&gt;その時教えてもらって参考にした本。&lt;/p&gt;

&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;language=ja_JP&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B00NLWAHTS&amp;amp;linkId=ffc6a5c7414beeef88ff59eab4760f41&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;ほったらかし投資で大事なのは、市場の状態にかかわらず、毎月定額ずつ買ういわゆるドルコスト平均法だったと思います。&lt;/p&gt;

&lt;p&gt;それから毎月定額を積み立てて投資しています。&lt;/p&gt;

</description>
        <pubDate>Sat, 28 Mar 2020 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/hobby/2020/03/28/investment-is-hard.html</link>
        <guid isPermaLink="true">https://masamichi.me/hobby/2020/03/28/investment-is-hard.html</guid>
        
        <category>ほったらかし投資</category>
        
        
        <category>hobby</category>
        
      </item>
    
      <item>
        <title>FirebaseでCloud Storageに画像をアップロードする</title>
        <description>&lt;p&gt;今FirebaseとReactでアプリを開発中で、画像をアップロードする部分を作ったのでメモ。&lt;/p&gt;

&lt;p&gt;アップロード部分&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// uploadPhotoという名前でexport&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uploadPhoto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;storageRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firebase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;storage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uuid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;generateUUID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// UUIDを作っていますがなんでもOK&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;metadata&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;contentType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;image/png&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fileRef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;storageRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;uuid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.png`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fileRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uuid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// UUIDを返していますが返さなくてもOK&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;使う部分&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SampleUploader&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fileInput&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createRef&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;photoData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;isPosting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Preview&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;photo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;photoData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;photoData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;      &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onSubmit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;isPosting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;photoId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;storage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;uploadPhoto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fileInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// use photoId&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;isPosting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;photoData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;image/*&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fileInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onChange&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FileReader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;photoData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readAsDataURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;photoData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;photo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;submit&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;disabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isPosting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;投稿する&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/button&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/form&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;無事FirebaseのCloud Storageに画像をアップロードすることができました。&lt;/p&gt;
</description>
        <pubDate>Fri, 03 Jan 2020 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/development/2020/01/03/upload-image-firebase.html</link>
        <guid isPermaLink="true">https://masamichi.me/development/2020/01/03/upload-image-firebase.html</guid>
        
        <category>Firebase</category>
        
        <category>Cloud Storage</category>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>2020年にネイティブアプリを開発する方法</title>
        <description>&lt;p&gt;去年&lt;a href=&quot;https://masamichi.me/development/2019/01/05/build-a-native-app-in-2019.html&quot;&gt;2019年にネイティブアプリを開発する方法&lt;/a&gt;という記事を書きました。&lt;/p&gt;

&lt;p&gt;その中では&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;ネイティブ言語、ネイティブプラットフォーム&lt;/li&gt;
  &lt;li&gt;React Native&lt;/li&gt;
  &lt;li&gt;Flutter&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;の3つの方法を紹介していました。&lt;/p&gt;

&lt;p&gt;2020年はどういう感じになりそうか、という実感を書いておきたいと思います。私はAndroidの開発方法については詳しくないので触れません。&lt;/p&gt;

&lt;p&gt;選択肢としては、&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Flutter&lt;/li&gt;
  &lt;li&gt;ネイティブ言語、新しいフレームワーク(Swift/SwiftUI)&lt;/li&gt;
  &lt;li&gt;ネイティブ言語、従来のフレームワーク(Swift/UIKit)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;という感じかなと思っています。&lt;/p&gt;

&lt;p&gt;ちなみにGoogleトレンドで、Flutter, React Native, SwiftUIを比較してみるとこんな感じです。
&lt;img src=&quot;/assets/posts/2020-01-01/compare.png&quot; alt=&quot;Compare&quot; title=&quot;Compare&quot; /&gt;&lt;/p&gt;

&lt;p&gt;期間は2018年1月1日から2019年12月31日です。2019年9月~10月ごろにFlutterがReact Nativeを超えてきているような感じでしょうか。SwiftUIはWWDC直後は増えているもののここ最近は横ばいのようです。&lt;/p&gt;

&lt;h2 id=&quot;1-flutter&quot;&gt;1. Flutter&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2020-01-01/flutter.png&quot; alt=&quot;Flutter&quot; title=&quot;Flutter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;FlutterはiOS, Android, Web, Desktopのクロスプラットフォームな環境に対してネイティブアプリを開発できるGoogle製のフレームワークです。プログラミング言語はDartを採用しています。&lt;/p&gt;

&lt;p&gt;Flutterは2019年とても勢いがあったように感じました。2019年QiitaのアドベントカレンダーでもFlutterが購読数1位だったようです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://qiita.com/advent-calendar/2019/ranking/subscriptions/categories/mobile&quot;&gt;Qiitaのモバイルのカレンダーランキング&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Flutterでは、WidgetとDartのStreamを組み合わせるBLoC(Business Logic Components)パターンというアーキテクチャが主流のようです。&lt;/p&gt;

&lt;p&gt;このビデオがわかりやすかったです。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Google IOのビデオ　Build reactive mobile apps with Flutter (Google I/O ‘18)&lt;/strong&gt;&lt;/p&gt;

&lt;iframe class=&quot;w-100&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/RS36gBEp8OI&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;こちらの記事も
&lt;a href=&quot;https://www.raywenderlich.com/4074597-getting-started-with-the-bloc-pattern&quot;&gt;Getting Started with the BLoC Pattern&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;これまでのクロスプラットフォームアプリ開発のフレームワークとは違った盛り上がりを見せているな、と言う印象のFlutterですが、2020年どうなるか注目です。&lt;/p&gt;

&lt;p&gt;開発したアプリではBLoCパターンは使っていなかったので今後このパターンを使いつつ、個人でもFlutterでアプリ開発をしていきたいと思います。&lt;/p&gt;

&lt;h2 id=&quot;2-ネイティブ言語新しいフレームワークswiftswiftui&quot;&gt;2. ネイティブ言語、新しいフレームワーク(Swift/SwiftUI)&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2020-01-01/swiftui.png&quot; alt=&quot;SwiftUI&quot; title=&quot;SwiftUI&quot; /&gt;
&lt;small&gt;&lt;a href=&quot;https://developer.apple.com/xcode/swiftui/&quot;&gt;Appleのサイト&lt;/a&gt;からスクリーンショット&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;WWDC2019で突然発表されたUIフレームワークがSwiftUIです。&lt;/p&gt;

&lt;p&gt;ついに公式で宣言的シンタックスがサポートされました。&lt;/p&gt;

&lt;p&gt;ReactやFlutterと同様、コンポーネントを組み合わせてViewを作っていく方式で、Stateの管理などもSwiftUIとCombineフレームワークでうまくできるようになっています。&lt;/p&gt;

&lt;p&gt;個人的にリファレンスになるリポジトリはこちらのMovieSwiftUIです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Dimillian/MovieSwiftUI&quot;&gt;MovieSwiftUI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2019年にSwiftUIでアプリを1つ開発しましたが、コンポーネント指向でかけるところはいいものの、想定外の動きをする場合があったりして、もっとチップスが色々共有されてくるといいですね。&lt;/p&gt;

&lt;p&gt;2020年、大規模で複雑なアプリをSwiftUIで作るのはまだ難しい部分もあるかもしれませんが、先取りで挑戦していく価値はあると思います。小規模なアプリならお試しで使ってみるのもいいと思います。&lt;/p&gt;

&lt;p&gt;もっとSwiftUIネイティブのコンポーネントが増えてくると便利になってくるでしょう。
とはいえ、Twitter上ではiPodをSwiftUIでiOS上に再現された方もいて、うまく作ればかなり高機能なアプリも開発できます。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Turned my iPhone into an iPod Classic with Click Wheel and Cover Flow with &lt;a href=&quot;https://twitter.com/hashtag/SwiftUI?src=hash&amp;amp;ref_src=twsrc%5Etfw&quot;&gt;#SwiftUI&lt;/a&gt; &lt;a href=&quot;https://t.co/zVk5YJj0rh&quot;&gt;pic.twitter.com/zVk5YJj0rh&lt;/a&gt;&lt;/p&gt;&amp;mdash; Elvin (@elvin_not_11) &lt;a href=&quot;https://twitter.com/elvin_not_11/status/1199717678908366854?ref_src=twsrc%5Etfw&quot;&gt;November 27, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;3-ネイティブ言語従来のフレームワークswiftuikit&quot;&gt;3. ネイティブ言語、従来のフレームワーク(Swift/UIKit)&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2019-01-05/swift.jpeg&quot; alt=&quot;Swift&quot; title=&quot;Swift&quot; /&gt;&lt;/p&gt;

&lt;p&gt;2020年でもネイティブアプリを開発するにはこれが一番シンプルな手段だと思います。&lt;/p&gt;

&lt;p&gt;SwiftUIが発表されたものの、既存のアプリはまだほとんどUIKitベースでしょうし、UIKitでできていたことがSwiftUIだとなかなかできない、といったこともまだあるかなと思います。&lt;/p&gt;

&lt;p&gt;既存のアプリがあったり、大規模になりそうなアプリを開発していくならUIKitにしておく方が安全かもしれません。とはいえ長期的に考えるとSwiftUIに移行していくと思うので、部分的にSwiftUIを導入するとか、SwiftUIに移行しやすい形でUIKitで開発する、という方法がバランス的に良さそうです。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;以上、2020年にネイティブアプリを開発するオススメの方法を3つ紹介してみました。&lt;/p&gt;

&lt;p&gt;新しい開発方法は色々と出てくるものの、開発者として開発していて楽しいものを選ぶことが大事だと思います。&lt;/p&gt;

&lt;p&gt;もちろん食わず嫌いはよくないので、どのフレームワークも学んで試した上で、最近の潮流も含めどれが自分に合うかを見極めていけばいいと思います。&lt;/p&gt;
</description>
        <pubDate>Wed, 01 Jan 2020 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/development/2020/01/01/build-a-native-app-in-2020.html</link>
        <guid isPermaLink="true">https://masamichi.me/development/2020/01/01/build-a-native-app-in-2020.html</guid>
        
        <category>アプリ開発</category>
        
        <category>Swift UI</category>
        
        <category>Flutter</category>
        
        <category>Swift</category>
        
        <category>Dart</category>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>GitHub Pagesでブログを運用し始めてから4年くらいたった</title>
        <description>&lt;p&gt;このサイトはGitHub Pagesで運用しています。&lt;/p&gt;

&lt;p&gt;運用を開始してから4年くらいたったのでGitHub Pages運用のTipsでも書いておこうかと思います。&lt;/p&gt;

&lt;h2 id=&quot;github-pageのいいところ&quot;&gt;GitHub Pageのいいところ&lt;/h2&gt;

&lt;p&gt;GitHub Pagesのいいところは、なんといっても無料で使えるところとサーバーを管理する必要がないところです。GitHubのリポジトリにコンテンツを置いておけばサイトを作ることができます。&lt;/p&gt;

&lt;p&gt;また、&lt;code class=&quot;highlighter-rouge&quot;&gt;username.github.io&lt;/code&gt;というドメインだけでなく、自分で取得したカスタムドメインが使えたりSSL(https)にも無料で対応できる、という点も本当に素晴らしいなと思います。&lt;/p&gt;

&lt;h2 id=&quot;jekyllとテンプレート&quot;&gt;Jekyllとテンプレート&lt;/h2&gt;
&lt;p&gt;GitHub Pagesはhtmlファイルをおけばサイトとして運用できますが、&lt;a href=&quot;https://jekyllrb-ja.github.io&quot;&gt;Jekyll&lt;/a&gt;というブログ・静的Webサイトを生成するツールをつかえば、ブログを作ることができます。私のサイトもJekyllを使っています。Jekyllにはブログテーマが色々と用意されているので、公開されているテーマを使うことができます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllthemes.org&quot;&gt;Jekyll Themes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;本サイトでは、テンプレートは使わずに、Jekyllの仕組みに則って自分のオリジナルのデザインを使用しています。テーマの作り方はWordpressに近くて、テンプレートとなるhtmlをJekyllのルールにしたがって作っていくという流れです。自分で作るとCSSやJavaScriptを柔軟に使うことができて、やっぱりいいですね。&lt;/p&gt;

&lt;h2 id=&quot;リポジトリの運用&quot;&gt;リポジトリの運用&lt;/h2&gt;

&lt;p&gt;GitHub Pagesは&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;ブランチの内容が反映されます。Jeykllのテンプレートテーマを使えば何も考えずに&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;にコンテンツを入れておけばいいのですが、本サイトのようにテンプレートテーマを使っていない場合は工夫が必要です。&lt;/p&gt;

&lt;p&gt;jekyllでビルドした結果の静的ページのファイルをmasterブランチに置く必要があるからです。&lt;/p&gt;

&lt;p&gt;本サイトでは、&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;ブランチと&lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt;ブランチを作成して運用しています。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;ブランチは直接触らずにビルドした結果を入れておくブランチにしています。&lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt;ブランチにはサイトの元となるjekyllのソースコードがあります。実は&lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt;ブランチがリポジトリの本当のルートディレクトリになっています。&lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt;ブランチでビルドした結果を&lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt;というディレクトリに入れていて、この&lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt;というディレクトリが、&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;ブランチに紐づいています。&lt;/p&gt;

&lt;p&gt;こうすることで、&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;はビルドされた結果を表示する静的サイト、&lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt;ブランチは&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;に置くファイルを生成するためのソースコードが入ったブランチにできます。&lt;/p&gt;

&lt;p&gt;この運用で全く問題なくできているので、おすすめです。&lt;/p&gt;

&lt;h2 id=&quot;seo対策&quot;&gt;SEO対策&lt;/h2&gt;

&lt;p&gt;SEO対策は&lt;code class=&quot;highlighter-rouge&quot;&gt;Jekyll SEO Tag&lt;/code&gt;というプラグインを入れているのと、Google Search Consoleにも一応登録しています。&lt;/p&gt;

&lt;p&gt;とはいえ、やはりコンテンツが大事だな、という結論です。&lt;/p&gt;

&lt;p&gt;記事が少ないころはあまり検索しても出てこないな、という感じでしたが、記事が増えてくるのとコンテンツが増えてくるにしたがって、いくつかの記事は検索でも上位に出てくるようになってきました。&lt;/p&gt;

&lt;h2 id=&quot;ローカライズ&quot;&gt;ローカライズ&lt;/h2&gt;

&lt;p&gt;記事のカテゴリには英語を使っています。そのカテゴリ名がurlに反映されるからです。しかしサイドバーに出るカテゴリ名は日本語で表示したいので、&lt;code class=&quot;highlighter-rouge&quot;&gt;Slug2Name&lt;/code&gt;というプラグインを使っています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://kerotaa.github.io/programming/2013/06/16/jekyll-category-slug-to-name-filter/&quot;&gt;英語名カテゴリーを日本語表記に変換するフィルター&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;に&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;category_slugs:
  development: &quot;開発&quot;
  family: &quot;家族&quot;
  design: &quot;デザイン&quot;
  hobby: &quot;趣味&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;のように書くとカテゴリ名が日本語で表示されるようにしています。&lt;/p&gt;

&lt;h2 id=&quot;まとめ&quot;&gt;まとめ&lt;/h2&gt;

&lt;p&gt;GitHub Pagesでブログを運営するTipsを書いてみました。Wordpressのようにアップデートの対応や、サーバーの管理もしなくていいし、無料でできるし、SSLも有効だしカスタムドメインも使えるし、マークダウンでブログがかける、ということで、GitHub Pagesとてもおすすめです。&lt;/p&gt;
</description>
        <pubDate>Sat, 14 Dec 2019 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/development/2019/12/14/github-pages-blog.html</link>
        <guid isPermaLink="true">https://masamichi.me/development/2019/12/14/github-pages-blog.html</guid>
        
        <category>GitHub Pages</category>
        
        <category>ブログ</category>
        
        <category>無料</category>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>UIScrollViewとUIStackViewで、UITableViewのハイライトを作る</title>
        <description>&lt;p&gt;UITableViewのようなレイアウトを作る際に、UIScrollViewとUIStackViewを使って作る場合もあるかと思います。&lt;/p&gt;

&lt;p&gt;UITableViewは選択されたセルをハイライトすることができますが、UIScrollViewとUIStackViewの場合はそのままではハイライトができません。&lt;/p&gt;

&lt;p&gt;今回はセルのハイライトを再現する方法を紹介します。&lt;/p&gt;

&lt;p&gt;リポジトリはこちら。
&lt;a href=&quot;https://github.com/masamichiueta/StackViewCellHighlight&quot;&gt;StackViewCellHighlight&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2019-12-06/StackViewCellHighlight.gif&quot; alt=&quot;StackViewCellHighlight&quot; title=&quot;StackViewCellHighlight&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;全体の構成&quot;&gt;全体の構成&lt;/h2&gt;

&lt;p&gt;全体のStoryboardは画像のようになっています。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2019-12-06/storyboard.png&quot; alt=&quot;Storyboard&quot; title=&quot;Storyboard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UIScrollView&lt;/code&gt;の中に&lt;code class=&quot;highlighter-rouge&quot;&gt;UIStackView&lt;/code&gt;を配置して、それぞれのCellに該当するViewを配置しています。&lt;/p&gt;

&lt;p&gt;それぞれのCellの中には、カスタムViewの&lt;code class=&quot;highlighter-rouge&quot;&gt;SelectableCellView&lt;/code&gt;を配置しています。この&lt;code class=&quot;highlighter-rouge&quot;&gt;SelectableCellView&lt;/code&gt;が選択時のハイライト処理を実装しています。また、&lt;code class=&quot;highlighter-rouge&quot;&gt;UIScrollView&lt;/code&gt;は&lt;code class=&quot;highlighter-rouge&quot;&gt;UIButton&lt;/code&gt;のイベントをキャンセルできる&lt;code class=&quot;highlighter-rouge&quot;&gt;UIButtonCancelableScrollView&lt;/code&gt;というカスタムクラスにしています。このスクロールビューを使うことで、セルの選択時にスクロールをした場合にスムーズにスクロールすることができます。&lt;/p&gt;

&lt;h2 id=&quot;selectablecellviewとselectablebutton&quot;&gt;SelectableCellViewとSelectableButton&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SelectableCellView&lt;/code&gt;は内部に&lt;code class=&quot;highlighter-rouge&quot;&gt;SelectableButton&lt;/code&gt;を配置しています。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SelectableButton&lt;/code&gt;には&lt;code class=&quot;highlighter-rouge&quot;&gt;setSelected(_ selected: Bool, animated: Bool)&lt;/code&gt;関数を定義していて、セルの選択状態が変更された時に呼び出します。&lt;code class=&quot;highlighter-rouge&quot;&gt;isSelected&lt;/code&gt;の状態管理と背景色の処理をしています。&lt;code class=&quot;highlighter-rouge&quot;&gt;isHighlight&lt;/code&gt;もオーバーライドしていて、&lt;code class=&quot;highlighter-rouge&quot;&gt;isSelected&lt;/code&gt;と合わせて背景色のハンドリングをしています。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SelectableButton&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SelectableButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIButton&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;isHighlighted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isHighlighted&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;backgroundColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isSelected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;opaqueSeparator&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;white&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isHighlighted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newValue&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setSelected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;selected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;animated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;isSelected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selected&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;backgroundColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selected&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;opaqueSeparator&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;white&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animated&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;UIView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;withDuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.35&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;animations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SelectableCellView&lt;/code&gt;では、&lt;code class=&quot;highlighter-rouge&quot;&gt;SelectableButton&lt;/code&gt;の&lt;code class=&quot;highlighter-rouge&quot;&gt;touchDown&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;touchCancel&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;touchUpInside&lt;/code&gt;にハンドラを設定しています。それぞれのイベントで選択状態をセットします。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SelectableCellView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIView&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;lazy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SelectableButton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SelectableButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}()&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;required&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;coder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSCoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;coder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;coder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;addSubview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;translatesAutoresizingMaskIntoConstraints&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;topAnchor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;constraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;equalTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;topAnchor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;constant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isActive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;leadingAnchor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;constraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;equalTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;leadingAnchor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;constant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isActive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trailingAnchor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;constraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;equalTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trailingAnchor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;constant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isActive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bottomAnchor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;constraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;equalTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bottomAnchor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;constant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isActive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;#selector(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;touchDown(button:)&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;touchDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;#selector(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cancel(button:)&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;touchCancel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;#selector(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;handleTap(button:)&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;touchUpInside&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;didTap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)?&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;@objc&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;handleTap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SelectableButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;setSelected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;animated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;didTap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

     &lt;span class=&quot;kd&quot;&gt;@objc&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;touchDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SelectableButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;setSelected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;animated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

     &lt;span class=&quot;kd&quot;&gt;@objc&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;cancel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SelectableButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;setSelected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;animated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

     &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setSelected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;selected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;animated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setSelected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;animated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;これで&lt;code class=&quot;highlighter-rouge&quot;&gt;UIStackView&lt;/code&gt;に配置したViewがタップされた時に背景がハイライトされるようになります。&lt;/p&gt;

&lt;h2 id=&quot;navigationcontrollerのスワイプバックに対応する&quot;&gt;NavigationControllerのスワイプバックに対応する&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UITableViewController&lt;/code&gt;には、セルをタップした時にセルを選択してプッシュ遷移した後、画面に戻ってきたらハイライトを消す&lt;code class=&quot;highlighter-rouge&quot;&gt;clearsSelectionOnViewWillAppear&lt;/code&gt;という設定があります。&lt;/p&gt;

&lt;p&gt;これを実現するには、選択されたセルを保持して、ViewControllerの&lt;code class=&quot;highlighter-rouge&quot;&gt;viewWillAppear&lt;/code&gt;で適切に選択状態をハンドリングする必要があります。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ViewController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIViewController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;....&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;selectedCell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;SelectableCellView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;clearsSelectionOnViewWillAppear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;....&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;viewWillAppear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;animated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;viewWillAppear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;animated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;selectedCell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selectedCell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clearsSelectionOnViewWillAppear&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;transitionCoordinator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;alongsideTransition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;selectedCell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setSelected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;animated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;completion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isCancelled&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;selectedCell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setSelected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;animated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selectedCell&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;これで、&lt;code class=&quot;highlighter-rouge&quot;&gt;UITableView&lt;/code&gt;のハイライトを&lt;code class=&quot;highlighter-rouge&quot;&gt;UIScrollView&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;UIStackView&lt;/code&gt;で実現することができました。&lt;/p&gt;

&lt;p&gt;こちらにサンプルコードを置いてあります。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/masamichiueta/StackViewCellHighlight&quot;&gt;StackViewCellHighlight&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 06 Dec 2019 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/development/2019/12/06/uistackview-cell-highlight.html</link>
        <guid isPermaLink="true">https://masamichi.me/development/2019/12/06/uistackview-cell-highlight.html</guid>
        
        <category>UIStackView</category>
        
        <category>UIScrollView</category>
        
        <category>UITableView</category>
        
        <category>ハイライト</category>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>横浜マラソン2019に参加しました</title>
        <description>&lt;p&gt;2019年11月10日に横浜で開催された横浜マラソン2019に参加しました。去年に引き続き2回目の参加です。&lt;/p&gt;

&lt;p&gt;去年の記事 &lt;a href=&quot;https://masamichi.me/hobby/2018/11/07/yokohama-marathon-2018.html&quot;&gt;横浜マラソン2018に参加しました&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;今年のタイムは、&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;グロスタイム: 4:57:34&lt;/li&gt;
  &lt;li&gt;ネットタイム: 4:38:53&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;でした！&lt;/p&gt;

&lt;p&gt;去年が&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;グロスタイム: 4:54:31&lt;/li&gt;
  &lt;li&gt;ネットタイム: 4:44:07&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;だったので、ネットタイムは6分程度早くなりました！&lt;/p&gt;

&lt;p&gt;今回Hグループでスタートがかなり後ろの方だったので、グロスタイムは落ちました。&lt;/p&gt;

&lt;p&gt;去年よりは安定して走れたと思います。やはり経験を積むのは大事だなと思いました。&lt;/p&gt;

&lt;p&gt;20km過ぎたあたりから足が痛くなってくるのはわかっていたので、10-20kmのところは丁寧に飛ばし過ぎず走りました。&lt;/p&gt;

&lt;p&gt;エアサロンパスも装備していて、ちょこちょこケアしつつ走りました。&lt;/p&gt;

&lt;p&gt;去年に引き続き、給水スポットが10数個設置されていてとてもありがたかったです。今年はラッキー給食は1箇所だけでした。&lt;/p&gt;

&lt;p&gt;横浜マラソンはやっぱり景色が綺麗で、天気もとてもよかったので走っている途中で富士山も見えたりします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2019-11-26/fujisan.jpeg&quot; alt=&quot;横浜マラソンの富士山&quot; title=&quot;横浜マラソンの富士山&quot; /&gt;&lt;/p&gt;

&lt;p&gt;30kmのタイマー。心で走れ
&lt;img src=&quot;/assets/posts/2019-11-26/30km.jpeg&quot; alt=&quot;30km&quot; title=&quot;30km&quot; /&gt;&lt;/p&gt;

&lt;p&gt;今年も無事完走メダルももらうことができました。来年も走りたいですね。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2019-11-26/goal.jpeg&quot; alt=&quot;横浜マラソン&quot; title=&quot;横浜マラソン&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 26 Nov 2019 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/hobby/2019/11/26/yokohama-marathon-2019.html</link>
        <guid isPermaLink="true">https://masamichi.me/hobby/2019/11/26/yokohama-marathon-2019.html</guid>
        
        <category>横浜マラソン</category>
        
        
        <category>hobby</category>
        
      </item>
    
      <item>
        <title>SwiftUIでNavigationLinkがクラッシュする - Tried to pop to a view controller that doesn't exist</title>
        <description>&lt;p&gt;SwiftUIで、公式チュートリアルで紹介されている&lt;code class=&quot;highlighter-rouge&quot;&gt;PageView&lt;/code&gt;の中に&lt;code class=&quot;highlighter-rouge&quot;&gt;NavigationLink&lt;/code&gt;を入れて、プッシュ遷移した後に戻るボタンでポップすると、&lt;code class=&quot;highlighter-rouge&quot;&gt;Tried to pop to a view controller that doesn't exist&lt;/code&gt; というエラーが発生してクラッシュしてしまいました。&lt;/p&gt;

&lt;p&gt;環境はXcode11.2.1でiOS13.2.2のシミュレータで実行しています。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UINavigationController&lt;/code&gt;が元の&lt;code class=&quot;highlighter-rouge&quot;&gt;ViewController&lt;/code&gt;にポップできていないようです。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;PageView&lt;/code&gt;が毎回新しい&lt;code class=&quot;highlighter-rouge&quot;&gt;ViewController&lt;/code&gt;を生成するのが原因でしょうか。&lt;/p&gt;

&lt;p&gt;ググってみると同じようなエラーにぶつかっている人もいるみたいです。Xcode11.0では動いていたので、iOSのバグ、という可能性もあります。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://forums.developer.apple.com/thread/124757&quot;&gt;SwiftUI - NavigationLink inside NavigationBarItems, returns error on navigating from detail back to master view&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;TabViewが原因で発生する場合もあるようですが、私は&lt;code class=&quot;highlighter-rouge&quot;&gt;PageView&lt;/code&gt;が原因でした。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/58737567/tried-to-pop-to-a-view-controller-that-doesnt-exist-in-swiftui&quot;&gt;Tried to pop to a view controller that doesn’t exist in SwiftUI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;解決方法はまだ見つかっていませんが、見つかったら紹介します。&lt;/p&gt;
</description>
        <pubDate>Tue, 26 Nov 2019 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/development/2019/11/26/swiftui-navigation-crash.html</link>
        <guid isPermaLink="true">https://masamichi.me/development/2019/11/26/swiftui-navigation-crash.html</guid>
        
        <category>SwiftUI</category>
        
        <category>NavigationLink</category>
        
        <category>PageView</category>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>昭和の森フォレストビレッジにキャンプに行ってきました</title>
        <description>&lt;p&gt;今回は千葉県にある昭和の森フォレストビレッジにキャンプにいってきました。
前回の&lt;a href=&quot;https://masamichi.me/family/2019/10/29/shiawasenooka-resort-camp.html&quot;&gt;Recamp勝浦（旧：しあわせの丘リゾート）のキャンプ&lt;/a&gt;に引き続き千葉県です!&lt;/p&gt;

&lt;p&gt;今回もなっぷで予約しました。たまたま芝生のフリーサイトに空きが出たので予約しました。&lt;/p&gt;

&lt;p&gt;オートキャンプサイト、フリーテントサイト、芝生サイトがありましたが、今回は芝生サイトです。どのサイトも隣合っていますが、芝生サイトは横にフットサルコートがありました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2019-11-18/forestvillage.jpeg&quot; alt=&quot;芝生サイト&quot; title=&quot;芝生サイト&quot; /&gt;&lt;/p&gt;

&lt;p&gt;フットサルは予約が入っていれば21時まであるみたいです。ナイターもついていて明るかったです。&lt;/p&gt;

&lt;p&gt;芝生サイトには4つくらいウッドデッキが設置されていて、空いていたら自由に使えるようでした。今回のテントはこんな感じでウッドデッキの上に設置しました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2019-11-18/cover.jpeg&quot; alt=&quot;テント&quot; title=&quot;テント&quot; /&gt;&lt;/p&gt;

&lt;p&gt;キャンプ上からは少し歩きますが、昭和の森には大きな遊具も設置されているので、テントの設営が終わったあとは、子供と遊具で遊ぶことができます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2019-11-18/athretic.jpeg&quot; alt=&quot;遊具&quot; title=&quot;遊具&quot; /&gt;&lt;/p&gt;

&lt;p&gt;近くには温泉施設もあり、車で15分くらいでいけます。&lt;/p&gt;

&lt;p&gt;食器の洗い場もキャンプ場にありますし、森！という感じでとても気持ちのいいキャンプ場でした。&lt;/p&gt;

&lt;p&gt;今回初めてウッドデッキを使ってテントを作ったのですが、ウッドデッキはよかったです。テントやシートは汚れにくいし寒さも少しましだったと思います。それでもやっぱり夜から明け方はかなり寒かったです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2019-11-18/wooddeck.jpeg&quot; alt=&quot;ウッドデッキ&quot; title=&quot;ウッドデッキ&quot; /&gt;&lt;/p&gt;

&lt;p&gt;キャンプ場としてはかなり満足度が高かったです、また来年も行きたいと思います。今度はオートキャンプサイト、フリーテントサイトに行ってみたいですね。&lt;/p&gt;
</description>
        <pubDate>Mon, 18 Nov 2019 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/family/2019/11/18/shouwanomori-forestvillage-camp.html</link>
        <guid isPermaLink="true">https://masamichi.me/family/2019/11/18/shouwanomori-forestvillage-camp.html</guid>
        
        <category>キャンプ</category>
        
        <category>昭和の森</category>
        
        <category>フォレストビレッジ</category>
        
        
        <category>family</category>
        
      </item>
    
      <item>
        <title>GitHub Sponsorsに登録する方法</title>
        <description>&lt;p&gt;先日GitHub Sponsorsに承認されました。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Approved GitHub sponsor 🦋&lt;a href=&quot;https://t.co/xSsKanltqM&quot;&gt;https://t.co/xSsKanltqM&lt;/a&gt;&lt;/p&gt;&amp;mdash; Masamichi Ueta 🐬 (@masamichiueta) &lt;a href=&quot;https://twitter.com/masamichiueta/status/1190139038830718976?ref_src=twsrc%5Etfw&quot;&gt;November 1, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;GitHub Sponsorsに登録することで、スポンサーを募ることができます。逆に、OSS開発をしている開発者のスポンサーになることができます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sponsors&quot;&gt;https://github.com/sponsors&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GitHub Sponsorsは現在承認制になっていて、GitHubに申請後、申請されると有効にできます。&lt;/p&gt;

&lt;p&gt;承認制になっているので、これまでのOSSへの貢献など条件があるかもしれませんが、基本的には誰でも申請できそうです。&lt;/p&gt;

&lt;p&gt;FAQページより抜粋&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;There are a small number of sponsored developers currently participating in the limited beta. Anyone who contributes to an open source project is eligible to become a sponsored developer in the future.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;現在ベータ版に参加しているスポンサー制度が適用された開発者は少ないです。将来的にはオープンソースプロジェクトに貢献している開発者なら誰でもスポンサー制度を適用できるようになります。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;申請するとWaitlistに入ります。その後承認されると、&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;GitHub Sponsorsのプロフィールの入力&lt;/li&gt;
  &lt;li&gt;スポンサーしてもらう金額の設定&lt;/li&gt;
  &lt;li&gt;Stripe Connectと連携して銀行口座の接続と本人確認&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;というステップのあと、再度GitHubに承認リクエストを申請します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2019-11-02/dashboard.png&quot; alt=&quot;ダッシュボード&quot; title=&quot;ダッシュボード&quot; /&gt;&lt;/p&gt;

&lt;p&gt;本人確認に数日時間がかかります。全体で1週間程度かかりました。&lt;/p&gt;

&lt;p&gt;承認されると、GitHub Sponsorsのダッシュボードが作られるのと、ユーザーページにSponsorボタンが表示されるようになります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2019-11-02/profile.png&quot; alt=&quot;プロフィール&quot; title=&quot;プロフィール&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sponsors/masamichiueta/dashboard&quot;&gt;https://github.com/sponsors/masamichiueta/dashboard&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 02 Nov 2019 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/development/2019/11/02/github-sponsors.html</link>
        <guid isPermaLink="true">https://masamichi.me/development/2019/11/02/github-sponsors.html</guid>
        
        <category>GitHub Sponsors</category>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>Recamp勝浦（旧：しあわせの丘リゾート）にキャンプに行ってきました</title>
        <description>&lt;p&gt;先日&lt;a href=&quot;https://masamichi.me/family/2019/10/09/soleil-camp.html&quot;&gt;横須賀にある公園ソレイユの丘にキャンプにいってきた&lt;/a&gt;のですが、次はRecamp勝浦（旧：しあわせの丘リゾート）にキャンプに行ってきました。今回もなっぷで予約しました。&lt;/p&gt;

&lt;p&gt;私が予約したのは、AC林間サイトというやつですね。&lt;/p&gt;

&lt;p&gt;なっぷのRecamp勝浦の説明には、&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;都心から車で2時間弱、勝浦駅からタクシーで10分弱と好アクセス！
国道から近いのに、静かでプライベート感を味わえます！
四季折々の花が咲く散策路が美しく、綺麗に整備された芝生の上でキャンプが楽しめます♪
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;と書いてあるのですが、実際にアクセスはしやすかったです。&lt;/p&gt;

&lt;p&gt;前日台風だったので、地面の状態が心配でしたが特に問題はありませんでした。
ただ私が泊まった区画は少し芝が少なかったです。キャンプ場全体としては綺麗に芝生が整備されていて、他の区画は綺麗でした。残念です。&lt;/p&gt;

&lt;p&gt;どの区画も車をそばにおけるのでとても便利でした！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2019-10-29/site.jpg&quot; alt=&quot;テント&quot; title=&quot;テント&quot; /&gt;&lt;/p&gt;

&lt;p&gt;なっぷに遊具があると書いてあったのですが、滑り台が1つ、鉄棒、木の上を歩くやつと、かなりこじんまりした感じで、少し物足りない感じでした。&lt;/p&gt;

&lt;p&gt;夜は晴れていて星が綺麗に見えました！&lt;/p&gt;
</description>
        <pubDate>Tue, 29 Oct 2019 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/family/2019/10/29/shiawasenooka-resort-camp.html</link>
        <guid isPermaLink="true">https://masamichi.me/family/2019/10/29/shiawasenooka-resort-camp.html</guid>
        
        <category>キャンプ</category>
        
        <category>Recamp勝浦</category>
        
        <category>しあわせの丘リゾート</category>
        
        
        <category>family</category>
        
      </item>
    
  </channel>
</rss>
