<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Masamichi Ueta</title>
    <description>エンジニアリング・デザイン・日常</description>
    <link>https://masamichi.mehttps://masamichi.me/</link>
    <atom:link href="https://masamichi.me/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 16 Jul 2018 18:41:49 +0900</pubDate>
    <lastBuildDate>Mon, 16 Jul 2018 18:41:49 +0900</lastBuildDate>
    <generator>Jekyll v3.8.1</generator>
    
      <item>
        <title>Amazonプライムデー2018　セールで買ったものまとめ</title>
        <description>&lt;h1 id=&quot;amazon-プライムデー&quot;&gt;Amazon プライムデー&lt;/h1&gt;

&lt;p&gt;今年もプライムデーが始まりました。&lt;/p&gt;

&lt;p&gt;プライムデーは、プライム会員限定でセール品を買える日です！&lt;/p&gt;

&lt;p&gt;毎年プライムデーやサイバーマンデーセールではその時必要な物を何かしら買っていて、今回も色々と買いました。&lt;/p&gt;

&lt;p&gt;買ったものをご紹介します。&lt;/p&gt;

&lt;h2 id=&quot;ビデオカメラ&quot;&gt;ビデオカメラ&lt;/h2&gt;

&lt;p&gt;今回のプライムデーではビデオカメラを買いました。買ったのは、Panasonic HDビデオカメラ V360MS 16GB 高倍率90倍ズーム ブラック HC-V360MS-Kです。&lt;/p&gt;

&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B01JRFABS4&amp;amp;linkId=ceb47439e0f836195cf917c5bdc6d703&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;子供が生まれてから、ビデオカメラを持っていた方がいいかなと思いつつも、スマホやカメラの動画で済ましていたのですが、今回プライムデーの事前告知でこちらのビデオカメラが予告されていたので、購入しました。&lt;/p&gt;

&lt;p&gt;4kではないですが、値段もそこまで高くないので入門機としては良さそうだと思い購入しました。&lt;/p&gt;

&lt;p&gt;軽くて小さそうなので、持ち運びやすくて色々なところでビデオが撮れそうです。&lt;/p&gt;

&lt;p&gt;ビデオカメラに合わせて、SDカードも購入しました。64GBが安かったので、購入。こちらはタイムセールですぐに100%売り切れてしまいましたが、キャンセル待ちで購入できました。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I-O DATA SDXCカード 64GB UHS-I(スピードクラス1)/Class10対応 耐X線 EX-SDU1/64G&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B01J5KLBGM&amp;amp;linkId=d78e9976d97d891505895761266fbb77&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;日用品&quot;&gt;日用品&lt;/h2&gt;

&lt;p&gt;セールのメインは日用品で、安くなっていたものをたくさん買いました。日用品はどの道必要になるので我が家では買い溜めしていて、セールなど安い時に買っています。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;【まとめ買い】バスマジックリン 泡立ちスプレー SUPERCLEAN グリーンハーブの香り つめかえ用 330ml × 4個&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B07BH54SW6&amp;amp;linkId=07a3a449610f51709c62dfc73d0d6dc1&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;【ケース販売】 アリエール 洗濯洗剤 液体 イオンパワージェルサイエンスプラス詰め替え 超ジャンボ1.62kg×6個&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B073VM9T53&amp;amp;linkId=a7b5955c127af580108942c51bc510cd&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;【大容量】パンテーン シャンプー エクストラダメージケア 詰替用 2000ml&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B00XXGCATW&amp;amp;linkId=ab49c6fb57a217d039d37422be0d8609&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;【大容量】 パンテーン トリートメントコンディショナー エクストラダメージケア 詰替用 超特大サイズ 1.7kg&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B01MG064E9&amp;amp;linkId=5033089b71f4086454a42bb118633d58&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;【大容量】ビオレU つめかえ 1350ml&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B0743GXHY6&amp;amp;linkId=467c4e0ac2dc3f139a87682ea7b9fa38&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;【まとめ買い】トイレクイックル つめかえ用 ジャンボパック 20枚 × 3個&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B07BH52QPY&amp;amp;linkId=108015c4b86944dafb204db8b7e04fdf&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;Amazon.co.jp限定】キレイキレイ 薬用 泡ハンドソープ シトラスフルーティの香り 詰め替え特大 800ml×2個 除菌シート付(医薬部外品)&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B07B53LVH6&amp;amp;linkId=158e77415d7c0bc904768e4e224b1120&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;[Amazonブランド]Happy Belly 強炭酸水 レモン 500ml×24本&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B077RQGTJF&amp;amp;linkId=a788773afc0a7cffd23e87bed027a25a&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;ベビー用品&quot;&gt;ベビー用品&lt;/h2&gt;

&lt;p&gt;ベビー用品もお得そうなものを購入しました！ものによっては、赤ちゃん本舗で買う方が安かったりするようなので、リサーチしてから購入することをお勧めします。&lt;/p&gt;

&lt;p&gt;ベビー用品は、レジで購入時に表示価格から割り引かれるパターンでしたが、この辺り他の商品と扱いが異なるのは何か理由があるのでしょうか。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;グーン パンツ L (9~14kg) 174枚(58枚×3) 男の子 まっさらさら通気 【ケース販売】&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B01IQTYZ2U&amp;amp;linkId=ebe119d6b82644950aec34e987bb02ba&quot;&gt;&lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;ムーニー おしりふき やわらか素材 純水99% 詰替 1920枚(80枚×24)【ケース品】&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;amp;bc1=000000&amp;amp;IS2=1&amp;amp;bg1=FFFFFF&amp;amp;fc1=000000&amp;amp;lc1=0000FF&amp;amp;t=maasaamiichii-22&amp;amp;o=9&amp;amp;p=8&amp;amp;l=as4&amp;amp;m=amazon&amp;amp;f=ifr&amp;amp;ref=as_ss_li_til&amp;amp;asins=B00UF8VOFM&amp;amp;linkId=35212158c1a3aff869cd0e8c934069e7&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;以上、今年もプライムデーで購入したものでした。&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Jul 2018 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/family/2018/07/16/amazon-prime-day-2018.html</link>
        <guid isPermaLink="true">https://masamichi.me/family/2018/07/16/amazon-prime-day-2018.html</guid>
        
        <category>プライムデー</category>
        
        <category>Amazon</category>
        
        
        <category>family</category>
        
      </item>
    
      <item>
        <title>横浜マラソン2018に当選したので参加します</title>
        <description>&lt;p&gt;4月に横浜マラソンに申し込んで、一般枠で当選していました。
連絡が6月に来ていて、参加料を振り込んだので横浜マラソンに参加します。&lt;/p&gt;

&lt;p&gt;ここ3年くらいは申し込んでいたのですが、今年はやっと当選しました！&lt;/p&gt;

&lt;p&gt;これから横浜マラソンに向けて練習を積み重ねて行こうと思います。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.yokohamamarathon.jp/2018/&quot;&gt;横浜マラソン2018&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Jul 2018 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/hobby/2018/07/15/yokohama-marathon-2018.html</link>
        <guid isPermaLink="true">https://masamichi.me/hobby/2018/07/15/yokohama-marathon-2018.html</guid>
        
        <category>横浜マラソン</category>
        
        
        <category>hobby</category>
        
      </item>
    
      <item>
        <title>Ledgerの新しいウォレット管理アプリ Ledger Liveの始め方</title>
        <description>&lt;h1 id=&quot;ledger-live&quot;&gt;Ledger Live&lt;/h1&gt;

&lt;p&gt;先週7/9にLedger Liveが発表されました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ledger.fr/2018/07/09/ledger-launches-ledger-live-the-all-in-one-companion-app-to-your-ledger-device/&quot;&gt;Ledger launches Ledger Live, the all-in-one companion app to your Ledger device&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;これまでChrome appとして提供されていた&lt;a href=&quot;https://www.ledgerwallet.com/apps/manager&quot;&gt;Ledger Manager&lt;/a&gt;や&lt;a href=&quot;https://www.ledgerwallet.com/apps&quot;&gt;各種walletアプリ&lt;/a&gt;などに取って代わる新しいアプリのようです。&lt;/p&gt;

&lt;p&gt;早速インストールして設定したので、手順を載せておきます。&lt;/p&gt;

&lt;h2 id=&quot;アプリをダウンロードインストールする&quot;&gt;アプリをダウンロード、インストールする&lt;/h2&gt;

&lt;p&gt;Ledger Liveのページから使用しているOS用のアプリをダウンロードします。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ledgerwallet.com/live&quot;&gt;Ledger Live&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ダウンロード後、アプリをインストールして起動します。&lt;/p&gt;

&lt;p&gt;起動すると以下のような画面が表示されます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2018-07-15/launch.png&quot; alt=&quot;Ledger Live 起動&quot; title=&quot;Ledger Live 起動&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Get Startedから始めます。&lt;/p&gt;

&lt;h2 id=&quot;デバイスの設定&quot;&gt;デバイスの設定&lt;/h2&gt;

&lt;p&gt;Get Startedを押すと、持っているハードウェアウォレットの設定が始まります。
私は既にLedger nano sを設定しているので、&lt;code class=&quot;highlighter-rouge&quot;&gt;Use a device that's already initialized&lt;/code&gt;を選択します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2018-07-15/device-setting.png&quot; alt=&quot;Ledger Live デバイス設定&quot; title=&quot;Ledger Live デバイス設定&quot; /&gt;&lt;/p&gt;

&lt;p&gt;次に設定するデバイスを選択します。私が使っているのはLedger nano sなので、Ledger nano sを選択しました。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2018-07-15/select-device.png&quot; alt=&quot;Ledger Live デバイス選択&quot; title=&quot;Ledger Live デバイス選択&quot; /&gt;&lt;/p&gt;

&lt;p&gt;次にセキュリティーチェックリストに答えていきます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2018-07-15/security-checklist.png&quot; alt=&quot;Ledger Live セキュリティーチェックリスト&quot; title=&quot;Ledger Live セキュリティーチェックリスト&quot; /&gt;&lt;/p&gt;

&lt;p&gt;PINコード、リカバリーフレーズはLedger nano sを設定した際に設定ずみだと思います。&lt;/p&gt;

&lt;h2 id=&quot;ledger-liveのパスワードの設定&quot;&gt;Ledger Liveのパスワードの設定&lt;/h2&gt;

&lt;p&gt;次に、Ledger Liveアプリを起動する際のパスワードを設定します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2018-07-15/password.png&quot; alt=&quot;Ledger Live パスワード&quot; title=&quot;Ledger Live パスワード&quot; /&gt;&lt;/p&gt;

&lt;p&gt;このパスワードを忘れるとLedger Liveを再設定する必要があるようです。
また、Ledger Liveを再設定してもウォレットがなくなる訳ではないので、再設定すればまた使えるようになります。&lt;/p&gt;

&lt;p&gt;パスワードを登録するとアプリが使えるようになります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2018-07-15/app.png&quot; alt=&quot;Ledger Live アプリ&quot; title=&quot;Ledger Live アプリ&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;アカウントを追加する&quot;&gt;アカウントを追加する&lt;/h2&gt;

&lt;p&gt;初めはアカウントがないので、自分のウォレットにある資産を管理するためにアカウントを登録します。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Add Accounts&lt;/code&gt;ボタンをおすと追加する仮想通貨を選択する画面が出てくるので選択します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2018-07-15/addaccounts.png&quot; alt=&quot;Ledger Live アカウント追加&quot; title=&quot;Ledger Live アカウント追加&quot; /&gt;&lt;/p&gt;

&lt;p&gt;選択後はダイアログにしたがって設定を行えばOKです。
アカウントが追加されるとLedger Live上で送金や受け取りができたりリアルタイムで資産の状態を把握することができます。&lt;/p&gt;

&lt;p&gt;レート設定も設定画面から行えて、USDやJPYが選択できます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2018-07-15/setting.png&quot; alt=&quot;Ledger Live 設定&quot; title=&quot;Ledger Live 設定&quot; /&gt;&lt;/p&gt;

&lt;p&gt;これまではChrome appだった上に、それぞれのウォレットアプリが分かれていて若干使いにくかったですが、Ledger Liveのように一つのアプリとして提供されると使いやすいですね〜&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Jul 2018 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/cryptocurrency/2018/07/15/how-to-start-ledgaer-live.html</link>
        <guid isPermaLink="true">https://masamichi.me/cryptocurrency/2018/07/15/how-to-start-ledgaer-live.html</guid>
        
        <category>Ledger</category>
        
        <category>Ledger nano s</category>
        
        <category>Ledger manager</category>
        
        <category>Ledger live</category>
        
        
        <category>cryptocurrency</category>
        
      </item>
    
      <item>
        <title>2018年最新版　GitHub Pagesでカスタムドメインを使用する</title>
        <description>&lt;p&gt;このブログはGitHub Pagesとjekyllで運用していますが、カスタムドメインの設定をしたのでその方法を記載しておきます。&lt;/p&gt;

&lt;h1 id=&quot;ドメインを取得する&quot;&gt;ドメインを取得する&lt;/h1&gt;

&lt;p&gt;まず自分の使用したいドメインを取得します。私はムームードメインで取得しました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://muumuu-domain.com&quot;&gt;ムームードメイン&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;理由は、&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;色々なドメインを取り扱っている&lt;/li&gt;
  &lt;li&gt;安い&lt;/li&gt;
  &lt;li&gt;Whois情報公開代行が無料かつ複雑な条件がない&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;という点です。&lt;/p&gt;

&lt;p&gt;以前はお名前.comでドメインを取得していましたが、Whois情報公開代行について、ドメイン取得時に申し込まないと無料にならないという条件があり、当時設定していなかったため使用するのをやめました。こういう複雑な条件を設定しているところはあまり使いたくないですね。&lt;/p&gt;

&lt;h1 id=&quot;github-pagesのリポジトリを設定する&quot;&gt;GitHub Pagesのリポジトリを設定する&lt;/h1&gt;

&lt;p&gt;デフォルトのGitHub Pagesのリポジトリ名は、&lt;code class=&quot;highlighter-rouge&quot;&gt;username.github.io&lt;/code&gt;というリポジトリだと思います。このリポジトリの設定画面でカスタムドメインの設定をすることができます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-07-01/githubpages.png&quot; alt=&quot;GitHub Pagesの設定&quot; title=&quot;GitHub Pagesの設定&quot; /&gt;&lt;/p&gt;

&lt;p&gt;私のドメインは、&lt;code class=&quot;highlighter-rouge&quot;&gt;masamichi.me&lt;/code&gt;なので、そのドメインを入力し、Enforce HTTPSも有効化します。&lt;/p&gt;

&lt;p&gt;リポジトリには&lt;code class=&quot;highlighter-rouge&quot;&gt;CNAME&lt;/code&gt;というファイルが追加されます。&lt;/p&gt;

&lt;h1 id=&quot;ムームードメインでdnsの設定を行う&quot;&gt;ムームードメインでDNSの設定を行う&lt;/h1&gt;

&lt;p&gt;ムームードメインの管理画面で、ドメイン操作　→ ムームーDNSを選択します。&lt;/p&gt;

&lt;p&gt;自分が取得したドメインが表示されていると思いますが、処理の所の変更ボタンを押します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-07-01/mumu1.png&quot; alt=&quot;処理の変更&quot; title=&quot;処理の変更&quot; /&gt;&lt;/p&gt;

&lt;p&gt;設定2のところで、Aレコードを以下のIPアドレスで4つ追加します。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;185.199.108.153&lt;/li&gt;
  &lt;li&gt;185.199.109.153&lt;/li&gt;
  &lt;li&gt;185.199.110.153&lt;/li&gt;
  &lt;li&gt;185.199.111.153&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-07-01/mumu2.png&quot; alt=&quot;Aレコード追加&quot; title=&quot;Aレコード追加&quot; /&gt;&lt;/p&gt;

&lt;p&gt;以上で設定は完了です。&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Jul 2018 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/development/2018/07/01/github-custom-domain.html</link>
        <guid isPermaLink="true">https://masamichi.me/development/2018/07/01/github-custom-domain.html</guid>
        
        <category>GitHub</category>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>FirebaseとReactとReduxで認証付きのWebアプリのサンプルを作りました</title>
        <description>&lt;p&gt;先日書いた記事　&lt;a href=&quot;https://masamichi.me/development/2018/06/18/firebase-react-authenticaton.html&quot;&gt;FirebaseとReactで認証付きアプリのサンプルを実行するまで&lt;/a&gt; の続きで、この認証サンプルをReduxを使うように変更したサンプルを作ってみました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/masamichiueta/react-redux-firebase-auth&quot;&gt;masamichiueta/react-redux-firebase-auth&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;動きとしては、&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Auth&lt;/code&gt;コンポーネントの&lt;code class=&quot;highlighter-rouge&quot;&gt;componentWillMount&lt;/code&gt;で、&lt;code class=&quot;highlighter-rouge&quot;&gt;firebase.auth.onAuthStateChanged&lt;/code&gt;を登録して、すでにログイン状態だったら、stateにuserを登録してログイン後の画面を表示する。未ログイン状態だったらトップ画面を表示する。&lt;/li&gt;
  &lt;li&gt;ログインページでログインしたら&lt;code class=&quot;highlighter-rouge&quot;&gt;auth.doSignInWithEmailAndPassword&lt;/code&gt;で返ってくるユーザー情報をstateに登録する。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;という流れです。&lt;/p&gt;

&lt;p&gt;1つ悩んでいることがあって、クライアントでレンダリングするので、&lt;code class=&quot;highlighter-rouge&quot;&gt;firebase.auth.onAuthStateChanged&lt;/code&gt;のコールバックが呼ばれるまでに少しラグがあり、一瞬ローディング画面を出さざるを得ない形になっています。&lt;/p&gt;

&lt;p&gt;このあたりの解消法というか、ベストプラクティスがありましたら、&lt;a href=&quot;https://twitter.com/masamichiueta&quot;&gt;@masamichiueta&lt;/a&gt;に教えていただけるとありがたいです。&lt;/p&gt;
</description>
        <pubDate>Sat, 30 Jun 2018 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/development/2018/06/30/firebase-react-redux.html</link>
        <guid isPermaLink="true">https://masamichi.me/development/2018/06/30/firebase-react-redux.html</guid>
        
        <category>Firebase</category>
        
        <category>React</category>
        
        <category>Redux</category>
        
        <category>JavaScript</category>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>FirebaseとReactで認証付きアプリのサンプルを実行するまで</title>
        <description>&lt;p&gt;現在FirebaseでWebアプリを作っています。アプリを作る上でユーザー認証は欠かせないものの、作るのが大変ということが多いですが、Firebaseを使うと簡単に実装することができました。&lt;/p&gt;

&lt;p&gt;私はWebアプリを作る上でReactを使うことが多いので、今回はFirebaseとReactでユーザー認証を行うサンプルアプリを実行して、Firebaseでホスティングしてみました。&lt;/p&gt;

&lt;p&gt;今回参考にしたサンプルはこちらです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rwieruch/react-firebase-authentication&quot;&gt;rwieruch/react-firebase-authentication&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;firebaseにプロジェクトを登録する&quot;&gt;Firebaseにプロジェクトを登録する&lt;/h1&gt;

&lt;p&gt;まずは&lt;a href=&quot;https://console.firebase.google.com/&quot;&gt;Firebaseのコンソール&lt;/a&gt;から、プロジェクトを登録します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-06-18/addproject.png&quot; alt=&quot;プロジェクト登録&quot; title=&quot;プロジェクト登録&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;アプリを設定する&quot;&gt;アプリを設定する&lt;/h2&gt;

&lt;p&gt;プロジェクトを登録したらログインの設定を行います。&lt;/p&gt;

&lt;p&gt;サイドメニューの&lt;code class=&quot;highlighter-rouge&quot;&gt;Authentication&lt;/code&gt;から、メールアドレスによるログインを有効にします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-06-18/login.png&quot; alt=&quot;メールアドレスログイン&quot; title=&quot;メールアドレスログイン&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-06-18/loginbymail.png&quot; alt=&quot;メールアドレスログイン&quot; title=&quot;メールアドレスログイン&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;firebaseコマンドラインツールのインストール&quot;&gt;Firebaseコマンドラインツールのインストール&lt;/h2&gt;

&lt;p&gt;Firebaseにアプリをデプロイするには、Firebaseコマンドラインツールをインストールする必要があります。&lt;/p&gt;

&lt;p&gt;npmパッケージで提供されているので、npmでインストールします。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm intall -g firebase-tools
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;その後ターミナルから以下のコマンドを実行します。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;firebase login

cd /path/to/project/directory // プロジェクトディレクトリに移動

firebase init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;firebase init&lt;/code&gt;を実行すると、使用する機能やプロジェクトを聞かれるので該当するものを選択します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-06-18/functions.png&quot; alt=&quot;firebaseの機能&quot; title=&quot;firebaseの機能&quot; /&gt;&lt;/p&gt;

&lt;p&gt;この場合は、&lt;code class=&quot;highlighter-rouge&quot;&gt;Firestore&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;Hosting&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;Storage&lt;/code&gt;を有効にしてみました。&lt;/p&gt;

&lt;p&gt;また途中で、&lt;code class=&quot;highlighter-rouge&quot;&gt; What do you want to use as your public directory?&lt;/code&gt;と聞かれるので、Reactアプリに合わせるために&lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt;に変更してください。&lt;/p&gt;

&lt;p&gt;プロジェクトを作成した後も、&lt;code class=&quot;highlighter-rouge&quot;&gt;firebase.json&lt;/code&gt;を修正すれば変更可能です。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;init&lt;/code&gt;が終了したら、試しに&lt;code class=&quot;highlighter-rouge&quot;&gt;deploy&lt;/code&gt;してみます。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;firebase deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;これでデフォルトのページがデプロイされました。&lt;/p&gt;

&lt;h1 id=&quot;サンプルアプリを実行する&quot;&gt;サンプルアプリを実行する&lt;/h1&gt;

&lt;p&gt;認証用のサンプルアプリをダウンロードします。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rwieruch/react-firebase-authentication&quot;&gt;rwieruch/react-firebase-authentication&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ダウンロードしたら、&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;package.json
public
src
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;をコピーします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-06-18/project.png&quot; alt=&quot;プロジェクト&quot; title=&quot;プロジェクト&quot; /&gt;&lt;/p&gt;

&lt;p&gt;その後npmパッケージをインストールします。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;インストール後は、&lt;code class=&quot;highlighter-rouge&quot;&gt;src/firebase/firebase.js&lt;/code&gt;の中の&lt;code class=&quot;highlighter-rouge&quot;&gt;config&lt;/code&gt;を自分のプロジェクトのものに変更します。
&lt;code class=&quot;highlighter-rouge&quot;&gt;prod&lt;/code&gt;と&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt;が定義されていますが、一旦同じものを入れました。&lt;/p&gt;

&lt;p&gt;configは、Firebaseのコンソールのトップ、&lt;code class=&quot;highlighter-rouge&quot;&gt;ウェブアプリにFirebaseを追加&lt;/code&gt;から表示することができます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-06-18/addfirebase.png&quot; alt=&quot;ウェブアプリにFirebaseを追加&quot; title=&quot;ウェブアプリにFirebaseを追加&quot; /&gt;&lt;/p&gt;

&lt;p&gt;設定を書き換えたら、アプリをビルドしてfirebaseにデプロイします。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm run build
firebase deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;以上で、サンプルアプリがFirebaseにデプロイされました。&lt;/p&gt;

&lt;p&gt;デプロイ後以下のようなページが表示されていれば成功です。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-06-18/sample.png&quot; alt=&quot;サンプル&quot; title=&quot;サンプル&quot; /&gt;&lt;/p&gt;

&lt;p&gt;サインアップページからユーザー登録をすると、Firebaseのユーザーが追加されます。&lt;/p&gt;
</description>
        <pubDate>Mon, 18 Jun 2018 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/development/2018/06/18/firebase-react-authenticaton.html</link>
        <guid isPermaLink="true">https://masamichi.me/development/2018/06/18/firebase-react-authenticaton.html</guid>
        
        <category>Firebase</category>
        
        <category>React</category>
        
        <category>JavaScript</category>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>What's new in ARKit 2 ~ ARKit2の新機能</title>
        <description>&lt;p&gt;WWDC2018で発表されたARKit2に関するセッションのビデオ &lt;a href=&quot;https://developer.apple.com/videos/play/wwdc2018/602/&quot;&gt;What’s New in ARKit 2&lt;/a&gt;のメモです。&lt;/p&gt;

&lt;h1 id=&quot;arkit2の新機能&quot;&gt;ARKit2の新機能&lt;/h1&gt;

&lt;p&gt;ざっくり書くと以下の点が新機能として紹介されていました。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ワールドマップの共有が可能になった&lt;/li&gt;
  &lt;li&gt;画像のトラッキングが可能になった&lt;/li&gt;
  &lt;li&gt;オブジェクトのテクスチャへの環境情報の反映（Environment Texturing、反射など）が可能になった&lt;/li&gt;
  &lt;li&gt;リアルな物体の認識、スキャンが可能に&lt;/li&gt;
  &lt;li&gt;フェイストラッキングの向上、視線追跡、舌の認識が可能になった&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;ARKit2ではマップのrelocalizationが追加されて、worldmapの保存、共有が可能に。これは便利だ&lt;/p&gt;&amp;mdash; Masamichi Ueta (@masamichiueta) &lt;a href=&quot;https://twitter.com/masamichiueta/status/1006324724211728385?ref_src=twsrc%5Etfw&quot;&gt;2018年6月11日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;ARKit2、ローカルでワールドマップのファイルシェアできるのか。単にファイルをAppGroupでシェアしてる感じかな&lt;/p&gt;&amp;mdash; Masamichi Ueta (@masamichiueta) &lt;a href=&quot;https://twitter.com/masamichiueta/status/1006326931149631488?ref_src=twsrc%5Etfw&quot;&gt;2018年6月12日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;Environment Texturingで反射のような環境情報を反映可能に&lt;/p&gt;&amp;mdash; Masamichi Ueta (@masamichiueta) &lt;a href=&quot;https://twitter.com/masamichiueta/status/1006329003722993665?ref_src=twsrc%5Etfw&quot;&gt;2018年6月12日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;ARKit2には画像追跡機能も追加。APIも使いやすそう&lt;/p&gt;&amp;mdash; Masamichi Ueta (@masamichiueta) &lt;a href=&quot;https://twitter.com/masamichiueta/status/1006428141441568769?ref_src=twsrc%5Etfw&quot;&gt;2018年6月12日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;FaceTrackingも強化。視線の追跡が可能に。舌の検出も可能。&lt;/p&gt;&amp;mdash; Masamichi Ueta (@masamichiueta) &lt;a href=&quot;https://twitter.com/masamichiueta/status/1006439704978313217?ref_src=twsrc%5Etfw&quot;&gt;2018年6月12日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;キーノートやセッションビデオで紹介されていますが、一番大きな点としては、&lt;strong&gt;複数人でワールドマップの共有が可能になった&lt;/strong&gt;ことかと思います。&lt;/p&gt;

&lt;p&gt;これによって、複数のデバイスで同じ位置にあるオブジェクトを見ることができるようになったり、キーノートの発表でもあった&lt;code class=&quot;highlighter-rouge&quot;&gt;SwiftShot&lt;/code&gt;のように複数人で遊べるARアプリを簡単に作れるようになりました。&lt;/p&gt;

&lt;p&gt;Environment Texturingも、&lt;code class=&quot;highlighter-rouge&quot;&gt;ARWorldTrackingConfiguration&lt;/code&gt;の&lt;code class=&quot;highlighter-rouge&quot;&gt;environmentTexturing&lt;/code&gt;を&lt;code class=&quot;highlighter-rouge&quot;&gt;.automatic&lt;/code&gt;にするだけで良いので非常に簡単に適用できて素晴らしいと思います。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Environment Texturing&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Create world tracking configuration&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;configuration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ARWorldTrackingConfiguration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Enable automatic environment texturing &lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;configuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environmentTexturing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;automatic&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Run the configuration&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;configuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;正式リリースされたら、アプリを作ってみる予定です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/documentation/arkit/swiftshot_creating_a_game_for_augmented_reality&quot;&gt;SwiftShot&lt;/a&gt;についてもソースを読んでみます。&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Jun 2018 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/development/2018/06/13/whats-new-in-arkit2.html</link>
        <guid isPermaLink="true">https://masamichi.me/development/2018/06/13/whats-new-in-arkit2.html</guid>
        
        <category>ARKit</category>
        
        <category>AR</category>
        
        <category>Apple</category>
        
        <category>WWDC</category>
        
        
        <category>development</category>
        
      </item>
    
      <item>
        <title>XRPペーパーウォレットの作り方</title>
        <description>&lt;h1 id=&quot;xrpウォレットの作り方&quot;&gt;XRPウォレットの作り方&lt;/h1&gt;

&lt;p&gt;XRPのウォレットを作る方法を紹介します。&lt;/p&gt;

&lt;p&gt;今回作成するのは、ペーパーウォレットです。&lt;/p&gt;

&lt;p&gt;ペーパーウォレットとは、ウォレットのアドレスと秘密鍵を紙に印刷して保管するウォレットです。&lt;/p&gt;

&lt;p&gt;紙ではなくて、例えば秘密鍵をUSBファイルに保存して、インターネットに接続されていない安全な場所に保管しておいても大丈夫でしょう。&lt;/p&gt;

&lt;p&gt;では早速作成していきましょう。&lt;/p&gt;

&lt;h1 id=&quot;ツールをダウンロードする&quot;&gt;ツールをダウンロードする&lt;/h1&gt;

&lt;p&gt;今回は、Octillionという会社が提供している、&lt;code class=&quot;highlighter-rouge&quot;&gt;generate-ripple-wallet&lt;/code&gt;というツールを使います。&lt;/p&gt;

&lt;p&gt;[generate-ripple-wallet](https://github.com/OctillionSA/generate-ripple-wallet)&lt;/p&gt;

&lt;p&gt;上のページにアクセスして、ファイルをダウンロードします。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-06-11/download.png&quot; alt=&quot;Download&quot; title=&quot;Download&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ファイルをダウンロードしなくても、Web上に提供されているアプリを使用すればウォレットを生成できるのですが、インターネットに繋がれたところで生成するのもセキュリティ的に微妙なので、オフラインで作成するためにダウンロードします。&lt;/p&gt;

&lt;h1 id=&quot;ツールを開く&quot;&gt;ツールを開く&lt;/h1&gt;

&lt;p&gt;ダウンロードしたら、zipを回答して、&lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt;を開きます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-06-11/html.png&quot; alt=&quot;html&quot; title=&quot;html&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt;を開くと、以下のような画面が表示されるので、右下の&lt;code class=&quot;highlighter-rouge&quot;&gt;Generate&lt;/code&gt;ボタンを押します。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-06-11/generate-ripple-wallet.png&quot; alt=&quot;generate-ripple-wallet&quot; title=&quot;generate-ripple-wallet&quot; /&gt;&lt;/p&gt;

&lt;p&gt;すると、Ripple addressにウォレットのアドレスが、Ripple secretに秘密鍵が表示されます。&lt;/p&gt;

&lt;p&gt;ここで生成された秘密鍵は、紙に書いて安全な場所に保管するか、USBメモリにテキストファイルとして保存して安全な場所に保管してください。&lt;/p&gt;

&lt;h1 id=&quot;ウォレットのアクティベーション&quot;&gt;ウォレットのアクティベーション&lt;/h1&gt;

&lt;p&gt;以上でウォレットは作成できましたが、XRPのウォレットを使えるようにするには、&lt;strong&gt;ウォレットに20XRP以上を送金してウォレットをアクティベートする必要があります&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;20XRPはウォレットを使うための手数料のようなもので、ウォレットに送られた20XRPは、送金することはできません。&lt;/p&gt;

&lt;p&gt;生成したアドレスに20XRP以上を送金してウォレットの生成は完了となります。&lt;/p&gt;

&lt;p&gt;簡単ですね！&lt;/p&gt;
</description>
        <pubDate>Mon, 11 Jun 2018 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/cryptocurrency/2018/06/11/how-to-create-xrp-wallet.html</link>
        <guid isPermaLink="true">https://masamichi.me/cryptocurrency/2018/06/11/how-to-create-xrp-wallet.html</guid>
        
        <category>XRP</category>
        
        <category>Ripple</category>
        
        <category>リップル</category>
        
        <category>ウォレット</category>
        
        <category>ペーパーウォレット</category>
        
        
        <category>cryptocurrency</category>
        
      </item>
    
      <item>
        <title>スマートコントラクトプラットフォームCodiusでReactアプリを実行してみた</title>
        <description>&lt;p&gt;元ネタはこちら
&lt;a href=&quot;https://medium.com/codius/running-a-simple-react-app-on-the-codius-smart-contract-platform-7ddefce8cb06&quot;&gt;Running a simple React app on the Codius smart contract platform&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;codiusとは&quot;&gt;Codiusとは&lt;/h1&gt;

&lt;p&gt;Codiusとは、&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ripple Labsにより開発が始まり2015年6月に打ち切りとなっていた、Ripple(XRP)に対応したスマートコントラクト
らしいです。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://crypto-times.jp/xrp_smartcontract_revive/&quot;&gt;Ripple Labsによって開発されたスマートコントラクトのプロトコル Codiusが復活&lt;/a&gt;から引用。&lt;/p&gt;

&lt;p&gt;公式サイトでは、以下のように書かれています。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Codius is an open hosting protocol. It makes it very easy to upload a program, whether you want it to run on one host or thousands.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Codiusはオープンなホスティングプロトコルです。Coidusを使うと、ホスティング先の数に関わらずプログラムのホスティングが非常に簡単になります。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;つまり、中央集権的に1つのサーバーでプログラムをホスティングするのではなく、非中央集権的にあらゆる環境でホスティングできますよということですね。&lt;/p&gt;

&lt;h1 id=&quot;codiusのセットアップ&quot;&gt;Codiusのセットアップ&lt;/h1&gt;

&lt;p&gt;Codiusはオープンソースで、開発者用ツールもすぐにインストールすることができます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/codius&quot;&gt;codius&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Codius&lt;/code&gt;をインストールするには、以下の3つが必要です。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;NodeJS version8.9.4以上&lt;/li&gt;
  &lt;li&gt;XRPウォレット&lt;/li&gt;
  &lt;li&gt;Moneyd&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Codiusを実行するには、先に&lt;code class=&quot;highlighter-rouge&quot;&gt;Moneyd&lt;/code&gt;を実行する必要があるようです。&lt;/p&gt;

&lt;p&gt;こちらの記事&lt;a href=&quot;https://medium.com/interledger-blog/joining-the-live-ilp-network-eab123a73665&quot;&gt;Joining the Live ILP Network&lt;/a&gt;を参考に&lt;code class=&quot;highlighter-rouge&quot;&gt;Moneyd&lt;/code&gt;の実行していきます。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Moneydをライブ環境で実行するにあたり、35XRP以上入ったウォレットが必要です。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;今回は開発用のテスト環境で行ってみます。&lt;/p&gt;

&lt;h2 id=&quot;moneydの実行&quot;&gt;Moneydの実行&lt;/h2&gt;

&lt;p&gt;以下のコマンドを実行します。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install -g moneyd moneyd-uplink-xrp
moneyd xrp:configure
moneyd xrp:start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;xrp:configureの際にはXRPの秘密鍵を入力します。&lt;/p&gt;

&lt;p&gt;これで、ILPネットワークに接続できました。&lt;/p&gt;

&lt;h2 id=&quot;codiusの実行&quot;&gt;Codiusの実行&lt;/h2&gt;

&lt;h3 id=&quot;manifestの作成&quot;&gt;Manifestの作成&lt;/h3&gt;

&lt;p&gt;Codiusを実行するには、Manifestを作成する必要があるようです。今回は、CodisuのサンプルからReactアプリを動かすManifestを使ってみます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/codius/examples&quot;&gt;codius/examples&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
  &quot;manifest&quot;: {
    &quot;name&quot;: &quot;my-codius-create-react-app&quot;,
    &quot;version&quot;: &quot;1.0.0&quot;,
    &quot;machine&quot;: &quot;small&quot;,
    &quot;port&quot;: &quot;3000&quot;,
    &quot;containers&quot;: [{
      &quot;id&quot;: &quot;app&quot;,
      &quot;image&quot;: &quot;androswong418/example-pod-1@sha256:8933bced1637e7d3b08c4aa50b96a45aef0b63f504f595bb890f57253af68b11&quot;
    }]
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;これを、&lt;code class=&quot;highlighter-rouge&quot;&gt;create-react-app-manifest.json&lt;/code&gt;というファイルで保存します。
このDockerコンテナは、Facebookの&lt;code class=&quot;highlighter-rouge&quot;&gt;create-react-app&lt;/code&gt;のイメージのようです。&lt;/p&gt;

&lt;h3 id=&quot;manifestのアップロード&quot;&gt;Manifestのアップロード&lt;/h3&gt;

&lt;p&gt;Manifestを作成したら、&lt;code class=&quot;highlighter-rouge&quot;&gt;codius&lt;/code&gt;のコマンドを使用してManifestをアップロードします。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;codius upload ./create-react-app-manifest.json --duration 200
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;アップロードが完了すると、以下のようなメッセージが表示されます。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Successfully Uploaded Pods to:
{ 
  url:  'http://hogehoge.local.codius.org:3000/',
 manifestHash: 'hogehoge',
  host: 'hogehoge',
  expiry: 'xxxx-xx-xxTxx:xx:xx.xxxZ',
  expirationDate: 'xx-xx-xxxx xx:xx:xx -0700',
  expires: 'in 2 minutes',
  pricePaid: 'xxx' 
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;に表示されたURLにアクセスすると、Reactアプリが実行されています！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://masamichi.me/assets/posts/2018-06-10/cover.png&quot; alt=&quot;React on Codius&quot; title=&quot;React on Codius&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Jun 2018 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/cryptocurrency/2018/06/10/ripple-codius-trial.html</link>
        <guid isPermaLink="true">https://masamichi.me/cryptocurrency/2018/06/10/ripple-codius-trial.html</guid>
        
        <category>Codius</category>
        
        <category>Ripple</category>
        
        <category>XRP</category>
        
        <category>React</category>
        
        
        <category>cryptocurrency</category>
        
      </item>
    
      <item>
        <title>よこすかYYのりものフェスタ2018に行ってきました</title>
        <description>&lt;h1 id=&quot;よこすかyyのりものフェスタ2018に行ってきました&quot;&gt;よこすかYYのりものフェスタ2018に行ってきました&lt;/h1&gt;

&lt;p&gt;横須賀駅で6月9日~6月10日に開催されている「よこすかYYのりものフェスタ2018」に行ってきました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cocoyoko.net/event/norimono-fes.html&quot;&gt;よこすかYYのりものフェスタ2018&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Webサイトから抜粋&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;鉄道や自動車、海上自衛隊の艦艇など、さまざまな分野の「のりもの」が横須賀に大集合！子ども向け制服記念撮影やミニ鉄道、よこすかグルメの出店もあり、家族みんなで楽しめるイベントです。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ということで横須賀駅を降りると、いきなりプラレールが展示されていました。
JR東日本展示には作業車両の展示も。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;よこすかYYのりものフェスタ &lt;a href=&quot;https://t.co/zKQb3NXArs&quot;&gt;pic.twitter.com/zKQb3NXArs&lt;/a&gt;&lt;/p&gt;&amp;mdash; Masamichi Ueta (@masamichiueta) &lt;a href=&quot;https://twitter.com/masamichiueta/status/1005278885880008704?ref_src=twsrc%5Etfw&quot;&gt;2018年6月9日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;11時30分くらいには、横須賀駅の2番線に黒船電車がきて、車内でご飯を食べたりできました。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;黒船電車&lt;br /&gt;よこすかYYのりものフェスタ &lt;a href=&quot;https://t.co/eNOrAYKEoU&quot;&gt;pic.twitter.com/eNOrAYKEoU&lt;/a&gt;&lt;/p&gt;&amp;mdash; Masamichi Ueta (@masamichiueta) &lt;a href=&quot;https://twitter.com/masamichiueta/status/1005297508078108672?ref_src=twsrc%5Etfw&quot;&gt;2018年6月9日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;黒船電車はゆったりしていて、よかったですね〜。&lt;/p&gt;

&lt;p&gt;そのあとは、自衛隊の方の展示に行って、試験艦あすかとヘリコプターの展示をみてきました。&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;und&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://t.co/ClgrwUEWMg&quot;&gt;pic.twitter.com/ClgrwUEWMg&lt;/a&gt;&lt;/p&gt;&amp;mdash; Masamichi Ueta (@masamichiueta) &lt;a href=&quot;https://twitter.com/masamichiueta/status/1005335778350718976?ref_src=twsrc%5Etfw&quot;&gt;2018年6月9日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;よこすかYYのりものフェスタ &lt;a href=&quot;https://t.co/sYKi2Bui4b&quot;&gt;pic.twitter.com/sYKi2Bui4b&lt;/a&gt;&lt;/p&gt;&amp;mdash; Masamichi Ueta (@masamichiueta) &lt;a href=&quot;https://twitter.com/masamichiueta/status/1005335898962006016?ref_src=twsrc%5Etfw&quot;&gt;2018年6月9日&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;無料でこれだけ楽しめるのは、なかなかないイベントだと思います！&lt;/p&gt;
</description>
        <pubDate>Sat, 09 Jun 2018 00:00:00 +0900</pubDate>
        <link>https://masamichi.me/family/2018/06/09/yokosukayynorimonofesta2018.html</link>
        <guid isPermaLink="true">https://masamichi.me/family/2018/06/09/yokosukayynorimonofesta2018.html</guid>
        
        <category>よこすかYYのりものフェスタ</category>
        
        <category>横須賀</category>
        
        <category>黒船電車</category>
        
        
        <category>family</category>
        
      </item>
    
  </channel>
</rss>
